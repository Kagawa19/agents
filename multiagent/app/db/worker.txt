time="2025-03-20T10:33:00Z" level=warning msg="/workspaces/agents/docker-compose.yml: the attribute `version` is obsolete, it will be ignored, please remove it to avoid potential confusion"
multiagent-worker  | 2025-03-20 10:25:39 [INFO] multiagent.app.worker.celery_app: Using broker URL: redis://redis:6379/0
multiagent-worker  | 2025-03-20 10:25:39 [INFO] multiagent.app.worker.celery_app: Using backend URL: redis://redis:6379/0
multiagent-worker  | 2025-03-20 10:25:40 [INFO] multiagent.app.worker.queue: TaskQueue: Initializing task queue interface
multiagent-worker  | 2025-03-20 10:25:40 [INFO] multiagent.app.worker.queue: TaskQueue: Celery app initialized with broker: redis://redis:6379/0
multiagent-worker  | 2025-03-20 10:25:40 [INFO] multiagent.app.worker.queue: TaskQueue: Result backend: redis://redis:6379/0
multiagent-worker  | 2025-03-20 10:25:40 [INFO] multiagent.app.worker.queue: TaskQueue: Testing Celery broker connection (attempt 1/3)
multiagent-worker  | 2025-03-20 10:25:45 [INFO] multiagent.app.worker.queue: TaskQueue: Successfully connected to Celery broker
multiagent-worker  | /usr/local/lib/python3.11/site-packages/celery/platforms.py:829: SecurityWarning: You're running the worker with superuser privileges: this is
multiagent-worker  | absolutely not recommended!
multiagent-worker  | 
multiagent-worker  | Please specify a different user using the --uid option.
multiagent-worker  | 
multiagent-worker  | User information: uid=0 euid=0 gid=0 egid=0
multiagent-worker  | 
multiagent-worker  |   warnings.warn(SecurityWarning(ROOT_DISCOURAGED.format(
multiagent-worker  | 2025-03-20 10:25:45 [INFO] multiagent.app.worker.celery_app: Initializing Celery worker
multiagent-worker  | 2025-03-20 10:25:45 [INFO] multiagent.app.worker.celery_app: Broker URL: redis://redis:6379/0
multiagent-worker  | 2025-03-20 10:25:45 [INFO] multiagent.app.worker.celery_app: Result backend: redis://redis:6379/0
multiagent-worker  | 2025-03-20 10:25:45 [INFO] multiagent.app.worker.celery_app: Hostname: c37196f0cca2
multiagent-worker  | 2025-03-20 10:25:45 [INFO] multiagent.app.db.session: Available models:
multiagent-worker  | 2025-03-20 10:25:45 [INFO] multiagent.app.db.session: - ProviderConfig
multiagent-worker  | 2025-03-20 10:25:45 [INFO] multiagent.app.db.session: - ProviderCapabilities
multiagent-worker  | 2025-03-20 10:25:45 [INFO] multiagent.app.db.session: - ProviderPerformance
multiagent-worker  | 2025-03-20 10:25:45 [INFO] multiagent.app.db.session: - Result
multiagent-worker  | 2025-03-20 10:25:45 [INFO] multiagent.app.db.session: - AgentExecution
multiagent-worker  | 2025-03-20 10:25:45 [INFO] multiagent.app.db.session: - APIRequest
multiagent-worker  | 2025-03-20 10:25:45 [INFO] multiagent.app.db.session: - AgentMetrics
multiagent-worker  | 2025-03-20 10:25:45,968 INFO sqlalchemy.engine.Engine select pg_catalog.version()
multiagent-worker  | 2025-03-20 10:25:45 [INFO] sqlalchemy.engine.Engine: select pg_catalog.version()
multiagent-worker  | 2025-03-20 10:25:45,969 INFO sqlalchemy.engine.Engine [raw sql] {}
multiagent-worker  | 2025-03-20 10:25:45 [INFO] sqlalchemy.engine.Engine: [raw sql] {}
multiagent-worker  | 2025-03-20 10:25:45,975 INFO sqlalchemy.engine.Engine select current_schema()
multiagent-worker  | 2025-03-20 10:25:45 [INFO] sqlalchemy.engine.Engine: select current_schema()
multiagent-worker  | 2025-03-20 10:25:45,975 INFO sqlalchemy.engine.Engine [raw sql] {}
multiagent-worker  | 2025-03-20 10:25:45 [INFO] sqlalchemy.engine.Engine: [raw sql] {}
multiagent-worker  | 2025-03-20 10:25:45,977 INFO sqlalchemy.engine.Engine show standard_conforming_strings
multiagent-worker  | 2025-03-20 10:25:45 [INFO] sqlalchemy.engine.Engine: show standard_conforming_strings
multiagent-worker  | 2025-03-20 10:25:45,978 INFO sqlalchemy.engine.Engine [raw sql] {}
multiagent-worker  | 2025-03-20 10:25:45 [INFO] sqlalchemy.engine.Engine: [raw sql] {}
multiagent-worker  | 2025-03-20 10:25:45,996 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:45 [INFO] sqlalchemy.engine.Engine: BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:45,997 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.relname 
multiagent-worker  | FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
multiagent-worker  | WHERE pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s]) AND pg_catalog.pg_class.relpersistence != %(relpersistence_1)s AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
multiagent-worker  | 2025-03-20 10:25:45,998 INFO sqlalchemy.engine.Engine [generated in 0.00237s] {'param_1': 'r', 'param_2': 'p', 'relpersistence_1': 't', 'nspname_1': 'pg_catalog'}
multiagent-worker  | 2025-03-20 10:25:45 [INFO] sqlalchemy.engine.Engine: SELECT pg_catalog.pg_class.relname 
multiagent-worker  | FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
multiagent-worker  | WHERE pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s]) AND pg_catalog.pg_class.relpersistence != %(relpersistence_1)s AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s
multiagent-worker  | 2025-03-20 10:25:45 [INFO] sqlalchemy.engine.Engine: [generated in 0.00237s] {'param_1': 'r', 'param_2': 'p', 'relpersistence_1': 't', 'nspname_1': 'pg_catalog'}
multiagent-worker  | 2025-03-20 10:25:46,011 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: ROLLBACK
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Existing tables: ['provider_configs', 'provider_capabilities', 'provider_performances', 'results', 'agent_executions', 'api_requests', 'agent_metrics']
multiagent-worker  | 2025-03-20 10:25:46,019 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46,020 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.oid, pg_catalog.pg_class.relname 
multiagent-worker  | FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
multiagent-worker  | WHERE pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s AND pg_catalog.pg_class.relname IN (%(filter_names_1)s)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: SELECT pg_catalog.pg_class.oid, pg_catalog.pg_class.relname 
multiagent-worker  | FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
multiagent-worker  | WHERE pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s AND pg_catalog.pg_class.relname IN (%(filter_names_1)s)
multiagent-worker  | 2025-03-20 10:25:46,022 INFO sqlalchemy.engine.Engine [generated in 0.00412s] {'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog', 'filter_names_1': 'provider_configs'}
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [generated in 0.00412s] {'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog', 'filter_names_1': 'provider_configs'}
multiagent-worker  | 2025-03-20 10:25:46,049 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_index.indrelid, cls_idx.relname AS relname_index, pg_catalog.pg_index.indisunique, pg_catalog.pg_constraint.conrelid IS NOT NULL AS has_constraint, pg_catalog.pg_index.indoption, cls_idx.reloptions, pg_catalog.pg_am.amname, CASE WHEN (pg_catalog.pg_index.indpred IS NOT NULL) THEN pg_catalog.pg_get_expr(pg_catalog.pg_index.indpred, pg_catalog.pg_index.indrelid) END AS filter_definition, pg_catalog.pg_index.indnkeyatts, false AS indnullsnotdistinct, idx_cols.elements, idx_cols.elements_is_expr 
multiagent-worker  | FROM pg_catalog.pg_index JOIN pg_catalog.pg_class AS cls_idx ON pg_catalog.pg_index.indexrelid = cls_idx.oid JOIN pg_catalog.pg_am ON cls_idx.relam = pg_catalog.pg_am.oid LEFT OUTER JOIN (SELECT idx_attr.indexrelid AS indexrelid, min(idx_attr.indrelid) AS min_1, array_agg(idx_attr.element ORDER BY idx_attr.ord) AS elements, array_agg(idx_attr.is_expr ORDER BY idx_attr.ord) AS elements_is_expr 
multiagent-worker  | FROM (SELECT idx.indexrelid AS indexrelid, idx.indrelid AS indrelid, idx.ord AS ord, CASE WHEN (idx.attnum = %(attnum_1)s) THEN pg_catalog.pg_get_indexdef(idx.indexrelid, idx.ord + %(ord_1)s, %(pg_get_indexdef_1)s) ELSE CAST(pg_catalog.pg_attribute.attname AS TEXT) END AS element, idx.attnum = %(attnum_2)s AS is_expr 
multiagent-worker  | FROM (SELECT pg_catalog.pg_index.indexrelid AS indexrelid, pg_catalog.pg_index.indrelid AS indrelid, unnest(pg_catalog.pg_index.indkey) AS attnum, generate_subscripts(pg_catalog.pg_index.indkey, %(generate_subscripts_1)s) AS ord 
multiagent-worker  | FROM pg_catalog.pg_index 
multiagent-worker  | WHERE NOT pg_catalog.pg_index.indisprimary AND pg_catalog.pg_index.indrelid IN (%(oids_1)s)) AS idx LEFT OUTER JOIN pg_catalog.pg_attribute ON pg_catalog.pg_attribute.attnum = idx.attnum AND pg_catalog.pg_attribute.attrelid = idx.indrelid 
multiagent-worker  | WHERE idx.indrelid IN (%(oids_1)s)) AS idx_attr GROUP BY idx_attr.indexrelid) AS idx_cols ON pg_catalog.pg_index.indexrelid = idx_cols.indexrelid LEFT OUTER JOIN pg_catalog.pg_constraint ON pg_catalog.pg_index.indrelid = pg_catalog.pg_constraint.conrelid AND pg_catalog.pg_index.indexrelid = pg_catalog.pg_constraint.conindid AND pg_catalog.pg_constraint.contype = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s]) 
multiagent-worker  | WHERE pg_catalog.pg_index.indrelid IN (%(oids_1)s) AND NOT pg_catalog.pg_index.indisprimary ORDER BY pg_catalog.pg_index.indrelid, cls_idx.relname
multiagent-worker  | 2025-03-20 10:25:46,050 INFO sqlalchemy.engine.Engine [generated in 0.00126s] {'attnum_1': 0, 'ord_1': 1, 'pg_get_indexdef_1': True, 'attnum_2': 0, 'generate_subscripts_1': 1, 'param_1': 'p', 'param_2': 'u', 'param_3': 'x', 'oids_1': 17294}
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: SELECT pg_catalog.pg_index.indrelid, cls_idx.relname AS relname_index, pg_catalog.pg_index.indisunique, pg_catalog.pg_constraint.conrelid IS NOT NULL AS has_constraint, pg_catalog.pg_index.indoption, cls_idx.reloptions, pg_catalog.pg_am.amname, CASE WHEN (pg_catalog.pg_index.indpred IS NOT NULL) THEN pg_catalog.pg_get_expr(pg_catalog.pg_index.indpred, pg_catalog.pg_index.indrelid) END AS filter_definition, pg_catalog.pg_index.indnkeyatts, false AS indnullsnotdistinct, idx_cols.elements, idx_cols.elements_is_expr 
multiagent-worker  | FROM pg_catalog.pg_index JOIN pg_catalog.pg_class AS cls_idx ON pg_catalog.pg_index.indexrelid = cls_idx.oid JOIN pg_catalog.pg_am ON cls_idx.relam = pg_catalog.pg_am.oid LEFT OUTER JOIN (SELECT idx_attr.indexrelid AS indexrelid, min(idx_attr.indrelid) AS min_1, array_agg(idx_attr.element ORDER BY idx_attr.ord) AS elements, array_agg(idx_attr.is_expr ORDER BY idx_attr.ord) AS elements_is_expr 
multiagent-worker  | FROM (SELECT idx.indexrelid AS indexrelid, idx.indrelid AS indrelid, idx.ord AS ord, CASE WHEN (idx.attnum = %(attnum_1)s) THEN pg_catalog.pg_get_indexdef(idx.indexrelid, idx.ord + %(ord_1)s, %(pg_get_indexdef_1)s) ELSE CAST(pg_catalog.pg_attribute.attname AS TEXT) END AS element, idx.attnum = %(attnum_2)s AS is_expr 
multiagent-worker  | FROM (SELECT pg_catalog.pg_index.indexrelid AS indexrelid, pg_catalog.pg_index.indrelid AS indrelid, unnest(pg_catalog.pg_index.indkey) AS attnum, generate_subscripts(pg_catalog.pg_index.indkey, %(generate_subscripts_1)s) AS ord 
multiagent-worker  | FROM pg_catalog.pg_index 
multiagent-worker  | WHERE NOT pg_catalog.pg_index.indisprimary AND pg_catalog.pg_index.indrelid IN (%(oids_1)s)) AS idx LEFT OUTER JOIN pg_catalog.pg_attribute ON pg_catalog.pg_attribute.attnum = idx.attnum AND pg_catalog.pg_attribute.attrelid = idx.indrelid 
multiagent-worker  | WHERE idx.indrelid IN (%(oids_1)s)) AS idx_attr GROUP BY idx_attr.indexrelid) AS idx_cols ON pg_catalog.pg_index.indexrelid = idx_cols.indexrelid LEFT OUTER JOIN pg_catalog.pg_constraint ON pg_catalog.pg_index.indrelid = pg_catalog.pg_constraint.conrelid AND pg_catalog.pg_index.indexrelid = pg_catalog.pg_constraint.conindid AND pg_catalog.pg_constraint.contype = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s]) 
multiagent-worker  | WHERE pg_catalog.pg_index.indrelid IN (%(oids_1)s) AND NOT pg_catalog.pg_index.indisprimary ORDER BY pg_catalog.pg_index.indrelid, cls_idx.relname
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [generated in 0.00126s] {'attnum_1': 0, 'ord_1': 1, 'pg_get_indexdef_1': True, 'attnum_2': 0, 'generate_subscripts_1': 1, 'param_1': 'p', 'param_2': 'u', 'param_3': 'x', 'oids_1': 17294}
multiagent-worker  | 2025-03-20 10:25:46,076 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: ROLLBACK
multiagent-worker  | 2025-03-20 10:25:46,078 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46,079 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.oid, pg_catalog.pg_class.relname 
multiagent-worker  | FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
multiagent-worker  | WHERE pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s AND pg_catalog.pg_class.relname IN (%(filter_names_1)s)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: SELECT pg_catalog.pg_class.oid, pg_catalog.pg_class.relname 
multiagent-worker  | FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
multiagent-worker  | WHERE pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s AND pg_catalog.pg_class.relname IN (%(filter_names_1)s)
multiagent-worker  | 2025-03-20 10:25:46,079 INFO sqlalchemy.engine.Engine [cached since 0.06126s ago] {'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog', 'filter_names_1': 'provider_capabilities'}
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [cached since 0.06126s ago] {'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog', 'filter_names_1': 'provider_capabilities'}
multiagent-worker  | 2025-03-20 10:25:46,082 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_index.indrelid, cls_idx.relname AS relname_index, pg_catalog.pg_index.indisunique, pg_catalog.pg_constraint.conrelid IS NOT NULL AS has_constraint, pg_catalog.pg_index.indoption, cls_idx.reloptions, pg_catalog.pg_am.amname, CASE WHEN (pg_catalog.pg_index.indpred IS NOT NULL) THEN pg_catalog.pg_get_expr(pg_catalog.pg_index.indpred, pg_catalog.pg_index.indrelid) END AS filter_definition, pg_catalog.pg_index.indnkeyatts, false AS indnullsnotdistinct, idx_cols.elements, idx_cols.elements_is_expr 
multiagent-worker  | FROM pg_catalog.pg_index JOIN pg_catalog.pg_class AS cls_idx ON pg_catalog.pg_index.indexrelid = cls_idx.oid JOIN pg_catalog.pg_am ON cls_idx.relam = pg_catalog.pg_am.oid LEFT OUTER JOIN (SELECT idx_attr.indexrelid AS indexrelid, min(idx_attr.indrelid) AS min_1, array_agg(idx_attr.element ORDER BY idx_attr.ord) AS elements, array_agg(idx_attr.is_expr ORDER BY idx_attr.ord) AS elements_is_expr 
multiagent-worker  | FROM (SELECT idx.indexrelid AS indexrelid, idx.indrelid AS indrelid, idx.ord AS ord, CASE WHEN (idx.attnum = %(attnum_1)s) THEN pg_catalog.pg_get_indexdef(idx.indexrelid, idx.ord + %(ord_1)s, %(pg_get_indexdef_1)s) ELSE CAST(pg_catalog.pg_attribute.attname AS TEXT) END AS element, idx.attnum = %(attnum_2)s AS is_expr 
multiagent-worker  | FROM (SELECT pg_catalog.pg_index.indexrelid AS indexrelid, pg_catalog.pg_index.indrelid AS indrelid, unnest(pg_catalog.pg_index.indkey) AS attnum, generate_subscripts(pg_catalog.pg_index.indkey, %(generate_subscripts_1)s) AS ord 
multiagent-worker  | FROM pg_catalog.pg_index 
multiagent-worker  | WHERE NOT pg_catalog.pg_index.indisprimary AND pg_catalog.pg_index.indrelid IN (%(oids_1)s)) AS idx LEFT OUTER JOIN pg_catalog.pg_attribute ON pg_catalog.pg_attribute.attnum = idx.attnum AND pg_catalog.pg_attribute.attrelid = idx.indrelid 
multiagent-worker  | WHERE idx.indrelid IN (%(oids_1)s)) AS idx_attr GROUP BY idx_attr.indexrelid) AS idx_cols ON pg_catalog.pg_index.indexrelid = idx_cols.indexrelid LEFT OUTER JOIN pg_catalog.pg_constraint ON pg_catalog.pg_index.indrelid = pg_catalog.pg_constraint.conrelid AND pg_catalog.pg_index.indexrelid = pg_catalog.pg_constraint.conindid AND pg_catalog.pg_constraint.contype = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s]) 
multiagent-worker  | WHERE pg_catalog.pg_index.indrelid IN (%(oids_1)s) AND NOT pg_catalog.pg_index.indisprimary ORDER BY pg_catalog.pg_index.indrelid, cls_idx.relname
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: SELECT pg_catalog.pg_index.indrelid, cls_idx.relname AS relname_index, pg_catalog.pg_index.indisunique, pg_catalog.pg_constraint.conrelid IS NOT NULL AS has_constraint, pg_catalog.pg_index.indoption, cls_idx.reloptions, pg_catalog.pg_am.amname, CASE WHEN (pg_catalog.pg_index.indpred IS NOT NULL) THEN pg_catalog.pg_get_expr(pg_catalog.pg_index.indpred, pg_catalog.pg_index.indrelid) END AS filter_definition, pg_catalog.pg_index.indnkeyatts, false AS indnullsnotdistinct, idx_cols.elements, idx_cols.elements_is_expr 
multiagent-worker  | FROM pg_catalog.pg_index JOIN pg_catalog.pg_class AS cls_idx ON pg_catalog.pg_index.indexrelid = cls_idx.oid JOIN pg_catalog.pg_am ON cls_idx.relam = pg_catalog.pg_am.oid LEFT OUTER JOIN (SELECT idx_attr.indexrelid AS indexrelid, min(idx_attr.indrelid) AS min_1, array_agg(idx_attr.element ORDER BY idx_attr.ord) AS elements, array_agg(idx_attr.is_expr ORDER BY idx_attr.ord) AS elements_is_expr 
multiagent-worker  | FROM (SELECT idx.indexrelid AS indexrelid, idx.indrelid AS indrelid, idx.ord AS ord, CASE WHEN (idx.attnum = %(attnum_1)s) THEN pg_catalog.pg_get_indexdef(idx.indexrelid, idx.ord + %(ord_1)s, %(pg_get_indexdef_1)s) ELSE CAST(pg_catalog.pg_attribute.attname AS TEXT) END AS element, idx.attnum = %(attnum_2)s AS is_expr 
multiagent-worker  | FROM (SELECT pg_catalog.pg_index.indexrelid AS indexrelid, pg_catalog.pg_index.indrelid AS indrelid, unnest(pg_catalog.pg_index.indkey) AS attnum, generate_subscripts(pg_catalog.pg_index.indkey, %(generate_subscripts_1)s) AS ord 
multiagent-worker  | FROM pg_catalog.pg_index 
multiagent-worker  | WHERE NOT pg_catalog.pg_index.indisprimary AND pg_catalog.pg_index.indrelid IN (%(oids_1)s)) AS idx LEFT OUTER JOIN pg_catalog.pg_attribute ON pg_catalog.pg_attribute.attnum = idx.attnum AND pg_catalog.pg_attribute.attrelid = idx.indrelid 
multiagent-worker  | WHERE idx.indrelid IN (%(oids_1)s)) AS idx_attr GROUP BY idx_attr.indexrelid) AS idx_cols ON pg_catalog.pg_index.indexrelid = idx_cols.indexrelid LEFT OUTER JOIN pg_catalog.pg_constraint ON pg_catalog.pg_index.indrelid = pg_catalog.pg_constraint.conrelid AND pg_catalog.pg_index.indexrelid = pg_catalog.pg_constraint.conindid AND pg_catalog.pg_constraint.contype = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s]) 
multiagent-worker  | WHERE pg_catalog.pg_index.indrelid IN (%(oids_1)s) AND NOT pg_catalog.pg_index.indisprimary ORDER BY pg_catalog.pg_index.indrelid, cls_idx.relname
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [cached since 0.03469s ago] {'attnum_1': 0, 'ord_1': 1, 'pg_get_indexdef_1': True, 'attnum_2': 0, 'generate_subscripts_1': 1, 'param_1': 'p', 'param_2': 'u', 'param_3': 'x', 'oids_1': 17305}
multiagent-worker  | 2025-03-20 10:25:46,083 INFO sqlalchemy.engine.Engine [cached since 0.03469s ago] {'attnum_1': 0, 'ord_1': 1, 'pg_get_indexdef_1': True, 'attnum_2': 0, 'generate_subscripts_1': 1, 'param_1': 'p', 'param_2': 'u', 'param_3': 'x', 'oids_1': 17305}
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: ROLLBACK
multiagent-worker  | 2025-03-20 10:25:46,091 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | 2025-03-20 10:25:46,094 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46,094 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.oid, pg_catalog.pg_class.relname 
multiagent-worker  | FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
multiagent-worker  | WHERE pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s AND pg_catalog.pg_class.relname IN (%(filter_names_1)s)
multiagent-worker  | 2025-03-20 10:25:46,095 INFO sqlalchemy.engine.Engine [cached since 0.07705s ago] {'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog', 'filter_names_1': 'provider_performances'}
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: SELECT pg_catalog.pg_class.oid, pg_catalog.pg_class.relname 
multiagent-worker  | FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
multiagent-worker  | WHERE pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s AND pg_catalog.pg_class.relname IN (%(filter_names_1)s)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [cached since 0.07705s ago] {'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog', 'filter_names_1': 'provider_performances'}
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: SELECT pg_catalog.pg_index.indrelid, cls_idx.relname AS relname_index, pg_catalog.pg_index.indisunique, pg_catalog.pg_constraint.conrelid IS NOT NULL AS has_constraint, pg_catalog.pg_index.indoption, cls_idx.reloptions, pg_catalog.pg_am.amname, CASE WHEN (pg_catalog.pg_index.indpred IS NOT NULL) THEN pg_catalog.pg_get_expr(pg_catalog.pg_index.indpred, pg_catalog.pg_index.indrelid) END AS filter_definition, pg_catalog.pg_index.indnkeyatts, false AS indnullsnotdistinct, idx_cols.elements, idx_cols.elements_is_expr 
multiagent-worker  | FROM pg_catalog.pg_index JOIN pg_catalog.pg_class AS cls_idx ON pg_catalog.pg_index.indexrelid = cls_idx.oid JOIN pg_catalog.pg_am ON cls_idx.relam = pg_catalog.pg_am.oid LEFT OUTER JOIN (SELECT idx_attr.indexrelid AS indexrelid, min(idx_attr.indrelid) AS min_1, array_agg(idx_attr.element ORDER BY idx_attr.ord) AS elements, array_agg(idx_attr.is_expr ORDER BY idx_attr.ord) AS elements_is_expr 
multiagent-worker  | FROM (SELECT idx.indexrelid AS indexrelid, idx.indrelid AS indrelid, idx.ord AS ord, CASE WHEN (idx.attnum = %(attnum_1)s) THEN pg_catalog.pg_get_indexdef(idx.indexrelid, idx.ord + %(ord_1)s, %(pg_get_indexdef_1)s) ELSE CAST(pg_catalog.pg_attribute.attname AS TEXT) END AS element, idx.attnum = %(attnum_2)s AS is_expr 
multiagent-worker  | FROM (SELECT pg_catalog.pg_index.indexrelid AS indexrelid, pg_catalog.pg_index.indrelid AS indrelid, unnest(pg_catalog.pg_index.indkey) AS attnum, generate_subscripts(pg_catalog.pg_index.indkey, %(generate_subscripts_1)s) AS ord 
multiagent-worker  | FROM pg_catalog.pg_index 
multiagent-worker  | WHERE NOT pg_catalog.pg_index.indisprimary AND pg_catalog.pg_index.indrelid IN (%(oids_1)s)) AS idx LEFT OUTER JOIN pg_catalog.pg_attribute ON pg_catalog.pg_attribute.attnum = idx.attnum AND pg_catalog.pg_attribute.attrelid = idx.indrelid 
multiagent-worker  | WHERE idx.indrelid IN (%(oids_1)s)) AS idx_attr GROUP BY idx_attr.indexrelid) AS idx_cols ON pg_catalog.pg_index.indexrelid = idx_cols.indexrelid LEFT OUTER JOIN pg_catalog.pg_constraint ON pg_catalog.pg_index.indrelid = pg_catalog.pg_constraint.conrelid AND pg_catalog.pg_index.indexrelid = pg_catalog.pg_constraint.conindid AND pg_catalog.pg_constraint.contype = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s]) 
multiagent-worker  | WHERE pg_catalog.pg_index.indrelid IN (%(oids_1)s) AND NOT pg_catalog.pg_index.indisprimary ORDER BY pg_catalog.pg_index.indrelid, cls_idx.relname
multiagent-worker  | 2025-03-20 10:25:46,098 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_index.indrelid, cls_idx.relname AS relname_index, pg_catalog.pg_index.indisunique, pg_catalog.pg_constraint.conrelid IS NOT NULL AS has_constraint, pg_catalog.pg_index.indoption, cls_idx.reloptions, pg_catalog.pg_am.amname, CASE WHEN (pg_catalog.pg_index.indpred IS NOT NULL) THEN pg_catalog.pg_get_expr(pg_catalog.pg_index.indpred, pg_catalog.pg_index.indrelid) END AS filter_definition, pg_catalog.pg_index.indnkeyatts, false AS indnullsnotdistinct, idx_cols.elements, idx_cols.elements_is_expr 
multiagent-worker  | FROM pg_catalog.pg_index JOIN pg_catalog.pg_class AS cls_idx ON pg_catalog.pg_index.indexrelid = cls_idx.oid JOIN pg_catalog.pg_am ON cls_idx.relam = pg_catalog.pg_am.oid LEFT OUTER JOIN (SELECT idx_attr.indexrelid AS indexrelid, min(idx_attr.indrelid) AS min_1, array_agg(idx_attr.element ORDER BY idx_attr.ord) AS elements, array_agg(idx_attr.is_expr ORDER BY idx_attr.ord) AS elements_is_expr 
multiagent-worker  | FROM (SELECT idx.indexrelid AS indexrelid, idx.indrelid AS indrelid, idx.ord AS ord, CASE WHEN (idx.attnum = %(attnum_1)s) THEN pg_catalog.pg_get_indexdef(idx.indexrelid, idx.ord + %(ord_1)s, %(pg_get_indexdef_1)s) ELSE CAST(pg_catalog.pg_attribute.attname AS TEXT) END AS element, idx.attnum = %(attnum_2)s AS is_expr 
multiagent-worker  | FROM (SELECT pg_catalog.pg_index.indexrelid AS indexrelid, pg_catalog.pg_index.indrelid AS indrelid, unnest(pg_catalog.pg_index.indkey) AS attnum, generate_subscripts(pg_catalog.pg_index.indkey, %(generate_subscripts_1)s) AS ord 
multiagent-worker  | FROM pg_catalog.pg_index 
multiagent-worker  | WHERE NOT pg_catalog.pg_index.indisprimary AND pg_catalog.pg_index.indrelid IN (%(oids_1)s)) AS idx LEFT OUTER JOIN pg_catalog.pg_attribute ON pg_catalog.pg_attribute.attnum = idx.attnum AND pg_catalog.pg_attribute.attrelid = idx.indrelid 
multiagent-worker  | WHERE idx.indrelid IN (%(oids_1)s)) AS idx_attr GROUP BY idx_attr.indexrelid) AS idx_cols ON pg_catalog.pg_index.indexrelid = idx_cols.indexrelid LEFT OUTER JOIN pg_catalog.pg_constraint ON pg_catalog.pg_index.indrelid = pg_catalog.pg_constraint.conrelid AND pg_catalog.pg_index.indexrelid = pg_catalog.pg_constraint.conindid AND pg_catalog.pg_constraint.contype = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s]) 
multiagent-worker  | WHERE pg_catalog.pg_index.indrelid IN (%(oids_1)s) AND NOT pg_catalog.pg_index.indisprimary ORDER BY pg_catalog.pg_index.indrelid, cls_idx.relname
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [cached since 0.05221s ago] {'attnum_1': 0, 'ord_1': 1, 'pg_get_indexdef_1': True, 'attnum_2': 0, 'generate_subscripts_1': 1, 'param_1': 'p', 'param_2': 'u', 'param_3': 'x', 'oids_1': 17320}
multiagent-worker  | 2025-03-20 10:25:46,101 INFO sqlalchemy.engine.Engine [cached since 0.05221s ago] {'attnum_1': 0, 'ord_1': 1, 'pg_get_indexdef_1': True, 'attnum_2': 0, 'generate_subscripts_1': 1, 'param_1': 'p', 'param_2': 'u', 'param_3': 'x', 'oids_1': 17320}
multiagent-worker  | 2025-03-20 10:25:46,109 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: ROLLBACK
multiagent-worker  | 2025-03-20 10:25:46,112 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46,113 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.oid, pg_catalog.pg_class.relname 
multiagent-worker  | FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
multiagent-worker  | WHERE pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s AND pg_catalog.pg_class.relname IN (%(filter_names_1)s)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: SELECT pg_catalog.pg_class.oid, pg_catalog.pg_class.relname 
multiagent-worker  | FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
multiagent-worker  | WHERE pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s AND pg_catalog.pg_class.relname IN (%(filter_names_1)s)
multiagent-worker  | 2025-03-20 10:25:46,115 INFO sqlalchemy.engine.Engine [cached since 0.09706s ago] {'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog', 'filter_names_1': 'results'}
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [cached since 0.09706s ago] {'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog', 'filter_names_1': 'results'}
multiagent-worker  | 2025-03-20 10:25:46,122 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_index.indrelid, cls_idx.relname AS relname_index, pg_catalog.pg_index.indisunique, pg_catalog.pg_constraint.conrelid IS NOT NULL AS has_constraint, pg_catalog.pg_index.indoption, cls_idx.reloptions, pg_catalog.pg_am.amname, CASE WHEN (pg_catalog.pg_index.indpred IS NOT NULL) THEN pg_catalog.pg_get_expr(pg_catalog.pg_index.indpred, pg_catalog.pg_index.indrelid) END AS filter_definition, pg_catalog.pg_index.indnkeyatts, false AS indnullsnotdistinct, idx_cols.elements, idx_cols.elements_is_expr 
multiagent-worker  | FROM pg_catalog.pg_index JOIN pg_catalog.pg_class AS cls_idx ON pg_catalog.pg_index.indexrelid = cls_idx.oid JOIN pg_catalog.pg_am ON cls_idx.relam = pg_catalog.pg_am.oid LEFT OUTER JOIN (SELECT idx_attr.indexrelid AS indexrelid, min(idx_attr.indrelid) AS min_1, array_agg(idx_attr.element ORDER BY idx_attr.ord) AS elements, array_agg(idx_attr.is_expr ORDER BY idx_attr.ord) AS elements_is_expr 
multiagent-worker  | FROM (SELECT idx.indexrelid AS indexrelid, idx.indrelid AS indrelid, idx.ord AS ord, CASE WHEN (idx.attnum = %(attnum_1)s) THEN pg_catalog.pg_get_indexdef(idx.indexrelid, idx.ord + %(ord_1)s, %(pg_get_indexdef_1)s) ELSE CAST(pg_catalog.pg_attribute.attname AS TEXT) END AS element, idx.attnum = %(attnum_2)s AS is_expr 
multiagent-worker  | FROM (SELECT pg_catalog.pg_index.indexrelid AS indexrelid, pg_catalog.pg_index.indrelid AS indrelid, unnest(pg_catalog.pg_index.indkey) AS attnum, generate_subscripts(pg_catalog.pg_index.indkey, %(generate_subscripts_1)s) AS ord 
multiagent-worker  | FROM pg_catalog.pg_index 
multiagent-worker  | WHERE NOT pg_catalog.pg_index.indisprimary AND pg_catalog.pg_index.indrelid IN (%(oids_1)s)) AS idx LEFT OUTER JOIN pg_catalog.pg_attribute ON pg_catalog.pg_attribute.attnum = idx.attnum AND pg_catalog.pg_attribute.attrelid = idx.indrelid 
multiagent-worker  | WHERE idx.indrelid IN (%(oids_1)s)) AS idx_attr GROUP BY idx_attr.indexrelid) AS idx_cols ON pg_catalog.pg_index.indexrelid = idx_cols.indexrelid LEFT OUTER JOIN pg_catalog.pg_constraint ON pg_catalog.pg_index.indrelid = pg_catalog.pg_constraint.conrelid AND pg_catalog.pg_index.indexrelid = pg_catalog.pg_constraint.conindid AND pg_catalog.pg_constraint.contype = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s]) 
multiagent-worker  | WHERE pg_catalog.pg_index.indrelid IN (%(oids_1)s) AND NOT pg_catalog.pg_index.indisprimary ORDER BY pg_catalog.pg_index.indrelid, cls_idx.relname
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: SELECT pg_catalog.pg_index.indrelid, cls_idx.relname AS relname_index, pg_catalog.pg_index.indisunique, pg_catalog.pg_constraint.conrelid IS NOT NULL AS has_constraint, pg_catalog.pg_index.indoption, cls_idx.reloptions, pg_catalog.pg_am.amname, CASE WHEN (pg_catalog.pg_index.indpred IS NOT NULL) THEN pg_catalog.pg_get_expr(pg_catalog.pg_index.indpred, pg_catalog.pg_index.indrelid) END AS filter_definition, pg_catalog.pg_index.indnkeyatts, false AS indnullsnotdistinct, idx_cols.elements, idx_cols.elements_is_expr 
multiagent-worker  | FROM pg_catalog.pg_index JOIN pg_catalog.pg_class AS cls_idx ON pg_catalog.pg_index.indexrelid = cls_idx.oid JOIN pg_catalog.pg_am ON cls_idx.relam = pg_catalog.pg_am.oid LEFT OUTER JOIN (SELECT idx_attr.indexrelid AS indexrelid, min(idx_attr.indrelid) AS min_1, array_agg(idx_attr.element ORDER BY idx_attr.ord) AS elements, array_agg(idx_attr.is_expr ORDER BY idx_attr.ord) AS elements_is_expr 
multiagent-worker  | FROM (SELECT idx.indexrelid AS indexrelid, idx.indrelid AS indrelid, idx.ord AS ord, CASE WHEN (idx.attnum = %(attnum_1)s) THEN pg_catalog.pg_get_indexdef(idx.indexrelid, idx.ord + %(ord_1)s, %(pg_get_indexdef_1)s) ELSE CAST(pg_catalog.pg_attribute.attname AS TEXT) END AS element, idx.attnum = %(attnum_2)s AS is_expr 
multiagent-worker  | FROM (SELECT pg_catalog.pg_index.indexrelid AS indexrelid, pg_catalog.pg_index.indrelid AS indrelid, unnest(pg_catalog.pg_index.indkey) AS attnum, generate_subscripts(pg_catalog.pg_index.indkey, %(generate_subscripts_1)s) AS ord 
multiagent-worker  | FROM pg_catalog.pg_index 
multiagent-worker  | WHERE NOT pg_catalog.pg_index.indisprimary AND pg_catalog.pg_index.indrelid IN (%(oids_1)s)) AS idx LEFT OUTER JOIN pg_catalog.pg_attribute ON pg_catalog.pg_attribute.attnum = idx.attnum AND pg_catalog.pg_attribute.attrelid = idx.indrelid 
multiagent-worker  | 2025-03-20 10:25:46,124 INFO sqlalchemy.engine.Engine [cached since 0.07511s ago] {'attnum_1': 0, 'ord_1': 1, 'pg_get_indexdef_1': True, 'attnum_2': 0, 'generate_subscripts_1': 1, 'param_1': 'p', 'param_2': 'u', 'param_3': 'x', 'oids_1': 17336}
multiagent-worker  | WHERE idx.indrelid IN (%(oids_1)s)) AS idx_attr GROUP BY idx_attr.indexrelid) AS idx_cols ON pg_catalog.pg_index.indexrelid = idx_cols.indexrelid LEFT OUTER JOIN pg_catalog.pg_constraint ON pg_catalog.pg_index.indrelid = pg_catalog.pg_constraint.conrelid AND pg_catalog.pg_index.indexrelid = pg_catalog.pg_constraint.conindid AND pg_catalog.pg_constraint.contype = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s]) 
multiagent-worker  | WHERE pg_catalog.pg_index.indrelid IN (%(oids_1)s) AND NOT pg_catalog.pg_index.indisprimary ORDER BY pg_catalog.pg_index.indrelid, cls_idx.relname
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [cached since 0.07511s ago] {'attnum_1': 0, 'ord_1': 1, 'pg_get_indexdef_1': True, 'attnum_2': 0, 'generate_subscripts_1': 1, 'param_1': 'p', 'param_2': 'u', 'param_3': 'x', 'oids_1': 17336}
multiagent-worker  | 2025-03-20 10:25:46,133 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: ROLLBACK
multiagent-worker  | 2025-03-20 10:25:46,136 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46,138 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.oid, pg_catalog.pg_class.relname 
multiagent-worker  | FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
multiagent-worker  | WHERE pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s AND pg_catalog.pg_class.relname IN (%(filter_names_1)s)
multiagent-worker  | 2025-03-20 10:25:46,138 INFO sqlalchemy.engine.Engine [cached since 0.1198s ago] {'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog', 'filter_names_1': 'agent_executions'}
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: SELECT pg_catalog.pg_class.oid, pg_catalog.pg_class.relname 
multiagent-worker  | FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
multiagent-worker  | WHERE pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s AND pg_catalog.pg_class.relname IN (%(filter_names_1)s)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [cached since 0.1198s ago] {'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog', 'filter_names_1': 'agent_executions'}
multiagent-worker  | 2025-03-20 10:25:46,143 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_index.indrelid, cls_idx.relname AS relname_index, pg_catalog.pg_index.indisunique, pg_catalog.pg_constraint.conrelid IS NOT NULL AS has_constraint, pg_catalog.pg_index.indoption, cls_idx.reloptions, pg_catalog.pg_am.amname, CASE WHEN (pg_catalog.pg_index.indpred IS NOT NULL) THEN pg_catalog.pg_get_expr(pg_catalog.pg_index.indpred, pg_catalog.pg_index.indrelid) END AS filter_definition, pg_catalog.pg_index.indnkeyatts, false AS indnullsnotdistinct, idx_cols.elements, idx_cols.elements_is_expr 
multiagent-worker  | FROM pg_catalog.pg_index JOIN pg_catalog.pg_class AS cls_idx ON pg_catalog.pg_index.indexrelid = cls_idx.oid JOIN pg_catalog.pg_am ON cls_idx.relam = pg_catalog.pg_am.oid LEFT OUTER JOIN (SELECT idx_attr.indexrelid AS indexrelid, min(idx_attr.indrelid) AS min_1, array_agg(idx_attr.element ORDER BY idx_attr.ord) AS elements, array_agg(idx_attr.is_expr ORDER BY idx_attr.ord) AS elements_is_expr 
multiagent-worker  | FROM (SELECT idx.indexrelid AS indexrelid, idx.indrelid AS indrelid, idx.ord AS ord, CASE WHEN (idx.attnum = %(attnum_1)s) THEN pg_catalog.pg_get_indexdef(idx.indexrelid, idx.ord + %(ord_1)s, %(pg_get_indexdef_1)s) ELSE CAST(pg_catalog.pg_attribute.attname AS TEXT) END AS element, idx.attnum = %(attnum_2)s AS is_expr 
multiagent-worker  | FROM (SELECT pg_catalog.pg_index.indexrelid AS indexrelid, pg_catalog.pg_index.indrelid AS indrelid, unnest(pg_catalog.pg_index.indkey) AS attnum, generate_subscripts(pg_catalog.pg_index.indkey, %(generate_subscripts_1)s) AS ord 
multiagent-worker  | FROM pg_catalog.pg_index 
multiagent-worker  | WHERE NOT pg_catalog.pg_index.indisprimary AND pg_catalog.pg_index.indrelid IN (%(oids_1)s)) AS idx LEFT OUTER JOIN pg_catalog.pg_attribute ON pg_catalog.pg_attribute.attnum = idx.attnum AND pg_catalog.pg_attribute.attrelid = idx.indrelid 
multiagent-worker  | WHERE idx.indrelid IN (%(oids_1)s)) AS idx_attr GROUP BY idx_attr.indexrelid) AS idx_cols ON pg_catalog.pg_index.indexrelid = idx_cols.indexrelid LEFT OUTER JOIN pg_catalog.pg_constraint ON pg_catalog.pg_index.indrelid = pg_catalog.pg_constraint.conrelid AND pg_catalog.pg_index.indexrelid = pg_catalog.pg_constraint.conindid AND pg_catalog.pg_constraint.contype = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s]) 
multiagent-worker  | WHERE pg_catalog.pg_index.indrelid IN (%(oids_1)s) AND NOT pg_catalog.pg_index.indisprimary ORDER BY pg_catalog.pg_index.indrelid, cls_idx.relname
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: SELECT pg_catalog.pg_index.indrelid, cls_idx.relname AS relname_index, pg_catalog.pg_index.indisunique, pg_catalog.pg_constraint.conrelid IS NOT NULL AS has_constraint, pg_catalog.pg_index.indoption, cls_idx.reloptions, pg_catalog.pg_am.amname, CASE WHEN (pg_catalog.pg_index.indpred IS NOT NULL) THEN pg_catalog.pg_get_expr(pg_catalog.pg_index.indpred, pg_catalog.pg_index.indrelid) END AS filter_definition, pg_catalog.pg_index.indnkeyatts, false AS indnullsnotdistinct, idx_cols.elements, idx_cols.elements_is_expr 
multiagent-worker  | FROM pg_catalog.pg_index JOIN pg_catalog.pg_class AS cls_idx ON pg_catalog.pg_index.indexrelid = cls_idx.oid JOIN pg_catalog.pg_am ON cls_idx.relam = pg_catalog.pg_am.oid LEFT OUTER JOIN (SELECT idx_attr.indexrelid AS indexrelid, min(idx_attr.indrelid) AS min_1, array_agg(idx_attr.element ORDER BY idx_attr.ord) AS elements, array_agg(idx_attr.is_expr ORDER BY idx_attr.ord) AS elements_is_expr 
multiagent-worker  | FROM (SELECT idx.indexrelid AS indexrelid, idx.indrelid AS indrelid, idx.ord AS ord, CASE WHEN (idx.attnum = %(attnum_1)s) THEN pg_catalog.pg_get_indexdef(idx.indexrelid, idx.ord + %(ord_1)s, %(pg_get_indexdef_1)s) ELSE CAST(pg_catalog.pg_attribute.attname AS TEXT) END AS element, idx.attnum = %(attnum_2)s AS is_expr 
multiagent-worker  | FROM (SELECT pg_catalog.pg_index.indexrelid AS indexrelid, pg_catalog.pg_index.indrelid AS indrelid, unnest(pg_catalog.pg_index.indkey) AS attnum, generate_subscripts(pg_catalog.pg_index.indkey, %(generate_subscripts_1)s) AS ord 
multiagent-worker  | FROM pg_catalog.pg_index 
multiagent-worker  | WHERE NOT pg_catalog.pg_index.indisprimary AND pg_catalog.pg_index.indrelid IN (%(oids_1)s)) AS idx LEFT OUTER JOIN pg_catalog.pg_attribute ON pg_catalog.pg_attribute.attnum = idx.attnum AND pg_catalog.pg_attribute.attrelid = idx.indrelid 
multiagent-worker  | WHERE idx.indrelid IN (%(oids_1)s)) AS idx_attr GROUP BY idx_attr.indexrelid) AS idx_cols ON pg_catalog.pg_index.indexrelid = idx_cols.indexrelid LEFT OUTER JOIN pg_catalog.pg_constraint ON pg_catalog.pg_index.indrelid = pg_catalog.pg_constraint.conrelid AND pg_catalog.pg_index.indexrelid = pg_catalog.pg_constraint.conindid AND pg_catalog.pg_constraint.contype = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s]) 
multiagent-worker  | WHERE pg_catalog.pg_index.indrelid IN (%(oids_1)s) AND NOT pg_catalog.pg_index.indisprimary ORDER BY pg_catalog.pg_index.indrelid, cls_idx.relname
multiagent-worker  | 2025-03-20 10:25:46,144 INFO sqlalchemy.engine.Engine [cached since 0.095s ago] {'attnum_1': 0, 'ord_1': 1, 'pg_get_indexdef_1': True, 'attnum_2': 0, 'generate_subscripts_1': 1, 'param_1': 'p', 'param_2': 'u', 'param_3': 'x', 'oids_1': 17350}
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [cached since 0.095s ago] {'attnum_1': 0, 'ord_1': 1, 'pg_get_indexdef_1': True, 'attnum_2': 0, 'generate_subscripts_1': 1, 'param_1': 'p', 'param_2': 'u', 'param_3': 'x', 'oids_1': 17350}
multiagent-worker  | 2025-03-20 10:25:46,151 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: ROLLBACK
multiagent-worker  | 2025-03-20 10:25:46,154 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46,155 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.oid, pg_catalog.pg_class.relname 
multiagent-worker  | FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
multiagent-worker  | WHERE pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s AND pg_catalog.pg_class.relname IN (%(filter_names_1)s)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: SELECT pg_catalog.pg_class.oid, pg_catalog.pg_class.relname 
multiagent-worker  | FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
multiagent-worker  | WHERE pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s AND pg_catalog.pg_class.relname IN (%(filter_names_1)s)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [cached since 0.1387s ago] {'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog', 'filter_names_1': 'api_requests'}
multiagent-worker  | 2025-03-20 10:25:46,157 INFO sqlalchemy.engine.Engine [cached since 0.1387s ago] {'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog', 'filter_names_1': 'api_requests'}
multiagent-worker  | 2025-03-20 10:25:46,160 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_index.indrelid, cls_idx.relname AS relname_index, pg_catalog.pg_index.indisunique, pg_catalog.pg_constraint.conrelid IS NOT NULL AS has_constraint, pg_catalog.pg_index.indoption, cls_idx.reloptions, pg_catalog.pg_am.amname, CASE WHEN (pg_catalog.pg_index.indpred IS NOT NULL) THEN pg_catalog.pg_get_expr(pg_catalog.pg_index.indpred, pg_catalog.pg_index.indrelid) END AS filter_definition, pg_catalog.pg_index.indnkeyatts, false AS indnullsnotdistinct, idx_cols.elements, idx_cols.elements_is_expr 
multiagent-worker  | FROM pg_catalog.pg_index JOIN pg_catalog.pg_class AS cls_idx ON pg_catalog.pg_index.indexrelid = cls_idx.oid JOIN pg_catalog.pg_am ON cls_idx.relam = pg_catalog.pg_am.oid LEFT OUTER JOIN (SELECT idx_attr.indexrelid AS indexrelid, min(idx_attr.indrelid) AS min_1, array_agg(idx_attr.element ORDER BY idx_attr.ord) AS elements, array_agg(idx_attr.is_expr ORDER BY idx_attr.ord) AS elements_is_expr 
multiagent-worker  | FROM (SELECT idx.indexrelid AS indexrelid, idx.indrelid AS indrelid, idx.ord AS ord, CASE WHEN (idx.attnum = %(attnum_1)s) THEN pg_catalog.pg_get_indexdef(idx.indexrelid, idx.ord + %(ord_1)s, %(pg_get_indexdef_1)s) ELSE CAST(pg_catalog.pg_attribute.attname AS TEXT) END AS element, idx.attnum = %(attnum_2)s AS is_expr 
multiagent-worker  | FROM (SELECT pg_catalog.pg_index.indexrelid AS indexrelid, pg_catalog.pg_index.indrelid AS indrelid, unnest(pg_catalog.pg_index.indkey) AS attnum, generate_subscripts(pg_catalog.pg_index.indkey, %(generate_subscripts_1)s) AS ord 
multiagent-worker  | FROM pg_catalog.pg_index 
multiagent-worker  | WHERE NOT pg_catalog.pg_index.indisprimary AND pg_catalog.pg_index.indrelid IN (%(oids_1)s)) AS idx LEFT OUTER JOIN pg_catalog.pg_attribute ON pg_catalog.pg_attribute.attnum = idx.attnum AND pg_catalog.pg_attribute.attrelid = idx.indrelid 
multiagent-worker  | WHERE idx.indrelid IN (%(oids_1)s)) AS idx_attr GROUP BY idx_attr.indexrelid) AS idx_cols ON pg_catalog.pg_index.indexrelid = idx_cols.indexrelid LEFT OUTER JOIN pg_catalog.pg_constraint ON pg_catalog.pg_index.indrelid = pg_catalog.pg_constraint.conrelid AND pg_catalog.pg_index.indexrelid = pg_catalog.pg_constraint.conindid AND pg_catalog.pg_constraint.contype = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s]) 
multiagent-worker  | WHERE pg_catalog.pg_index.indrelid IN (%(oids_1)s) AND NOT pg_catalog.pg_index.indisprimary ORDER BY pg_catalog.pg_index.indrelid, cls_idx.relname
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: SELECT pg_catalog.pg_index.indrelid, cls_idx.relname AS relname_index, pg_catalog.pg_index.indisunique, pg_catalog.pg_constraint.conrelid IS NOT NULL AS has_constraint, pg_catalog.pg_index.indoption, cls_idx.reloptions, pg_catalog.pg_am.amname, CASE WHEN (pg_catalog.pg_index.indpred IS NOT NULL) THEN pg_catalog.pg_get_expr(pg_catalog.pg_index.indpred, pg_catalog.pg_index.indrelid) END AS filter_definition, pg_catalog.pg_index.indnkeyatts, false AS indnullsnotdistinct, idx_cols.elements, idx_cols.elements_is_expr 
multiagent-worker  | FROM pg_catalog.pg_index JOIN pg_catalog.pg_class AS cls_idx ON pg_catalog.pg_index.indexrelid = cls_idx.oid JOIN pg_catalog.pg_am ON cls_idx.relam = pg_catalog.pg_am.oid LEFT OUTER JOIN (SELECT idx_attr.indexrelid AS indexrelid, min(idx_attr.indrelid) AS min_1, array_agg(idx_attr.element ORDER BY idx_attr.ord) AS elements, array_agg(idx_attr.is_expr ORDER BY idx_attr.ord) AS elements_is_expr 
multiagent-worker  | FROM (SELECT idx.indexrelid AS indexrelid, idx.indrelid AS indrelid, idx.ord AS ord, CASE WHEN (idx.attnum = %(attnum_1)s) THEN pg_catalog.pg_get_indexdef(idx.indexrelid, idx.ord + %(ord_1)s, %(pg_get_indexdef_1)s) ELSE CAST(pg_catalog.pg_attribute.attname AS TEXT) END AS element, idx.attnum = %(attnum_2)s AS is_expr 
multiagent-worker  | FROM (SELECT pg_catalog.pg_index.indexrelid AS indexrelid, pg_catalog.pg_index.indrelid AS indrelid, unnest(pg_catalog.pg_index.indkey) AS attnum, generate_subscripts(pg_catalog.pg_index.indkey, %(generate_subscripts_1)s) AS ord 
multiagent-worker  | FROM pg_catalog.pg_index 
multiagent-worker  | WHERE NOT pg_catalog.pg_index.indisprimary AND pg_catalog.pg_index.indrelid IN (%(oids_1)s)) AS idx LEFT OUTER JOIN pg_catalog.pg_attribute ON pg_catalog.pg_attribute.attnum = idx.attnum AND pg_catalog.pg_attribute.attrelid = idx.indrelid 
multiagent-worker  | WHERE idx.indrelid IN (%(oids_1)s)) AS idx_attr GROUP BY idx_attr.indexrelid) AS idx_cols ON pg_catalog.pg_index.indexrelid = idx_cols.indexrelid LEFT OUTER JOIN pg_catalog.pg_constraint ON pg_catalog.pg_index.indrelid = pg_catalog.pg_constraint.conrelid AND pg_catalog.pg_index.indexrelid = pg_catalog.pg_constraint.conindid AND pg_catalog.pg_constraint.contype = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s]) 
multiagent-worker  | WHERE pg_catalog.pg_index.indrelid IN (%(oids_1)s) AND NOT pg_catalog.pg_index.indisprimary ORDER BY pg_catalog.pg_index.indrelid, cls_idx.relname
multiagent-worker  | 2025-03-20 10:25:46,162 INFO sqlalchemy.engine.Engine [cached since 0.1135s ago] {'attnum_1': 0, 'ord_1': 1, 'pg_get_indexdef_1': True, 'attnum_2': 0, 'generate_subscripts_1': 1, 'param_1': 'p', 'param_2': 'u', 'param_3': 'x', 'oids_1': 17364}
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [cached since 0.1135s ago] {'attnum_1': 0, 'ord_1': 1, 'pg_get_indexdef_1': True, 'attnum_2': 0, 'generate_subscripts_1': 1, 'param_1': 'p', 'param_2': 'u', 'param_3': 'x', 'oids_1': 17364}
multiagent-worker  | 2025-03-20 10:25:46,171 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | 2025-03-20 10:25:46,173 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: ROLLBACK
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: SELECT pg_catalog.pg_class.oid, pg_catalog.pg_class.relname 
multiagent-worker  | FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
multiagent-worker  | WHERE pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s AND pg_catalog.pg_class.relname IN (%(filter_names_1)s)
multiagent-worker  | 2025-03-20 10:25:46,174 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_class.oid, pg_catalog.pg_class.relname 
multiagent-worker  | FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
multiagent-worker  | WHERE pg_catalog.pg_class.relkind = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s, %(param_4)s, %(param_5)s]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != %(nspname_1)s AND pg_catalog.pg_class.relname IN (%(filter_names_1)s)
multiagent-worker  | 2025-03-20 10:25:46,175 INFO sqlalchemy.engine.Engine [cached since 0.1565s ago] {'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog', 'filter_names_1': 'agent_metrics'}
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [cached since 0.1565s ago] {'param_1': 'r', 'param_2': 'p', 'param_3': 'f', 'param_4': 'v', 'param_5': 'm', 'nspname_1': 'pg_catalog', 'filter_names_1': 'agent_metrics'}
multiagent-worker  | 2025-03-20 10:25:46,180 INFO sqlalchemy.engine.Engine SELECT pg_catalog.pg_index.indrelid, cls_idx.relname AS relname_index, pg_catalog.pg_index.indisunique, pg_catalog.pg_constraint.conrelid IS NOT NULL AS has_constraint, pg_catalog.pg_index.indoption, cls_idx.reloptions, pg_catalog.pg_am.amname, CASE WHEN (pg_catalog.pg_index.indpred IS NOT NULL) THEN pg_catalog.pg_get_expr(pg_catalog.pg_index.indpred, pg_catalog.pg_index.indrelid) END AS filter_definition, pg_catalog.pg_index.indnkeyatts, false AS indnullsnotdistinct, idx_cols.elements, idx_cols.elements_is_expr 
multiagent-worker  | FROM pg_catalog.pg_index JOIN pg_catalog.pg_class AS cls_idx ON pg_catalog.pg_index.indexrelid = cls_idx.oid JOIN pg_catalog.pg_am ON cls_idx.relam = pg_catalog.pg_am.oid LEFT OUTER JOIN (SELECT idx_attr.indexrelid AS indexrelid, min(idx_attr.indrelid) AS min_1, array_agg(idx_attr.element ORDER BY idx_attr.ord) AS elements, array_agg(idx_attr.is_expr ORDER BY idx_attr.ord) AS elements_is_expr 
multiagent-worker  | FROM (SELECT idx.indexrelid AS indexrelid, idx.indrelid AS indrelid, idx.ord AS ord, CASE WHEN (idx.attnum = %(attnum_1)s) THEN pg_catalog.pg_get_indexdef(idx.indexrelid, idx.ord + %(ord_1)s, %(pg_get_indexdef_1)s) ELSE CAST(pg_catalog.pg_attribute.attname AS TEXT) END AS element, idx.attnum = %(attnum_2)s AS is_expr 
multiagent-worker  | FROM (SELECT pg_catalog.pg_index.indexrelid AS indexrelid, pg_catalog.pg_index.indrelid AS indrelid, unnest(pg_catalog.pg_index.indkey) AS attnum, generate_subscripts(pg_catalog.pg_index.indkey, %(generate_subscripts_1)s) AS ord 
multiagent-worker  | FROM pg_catalog.pg_index 
multiagent-worker  | WHERE NOT pg_catalog.pg_index.indisprimary AND pg_catalog.pg_index.indrelid IN (%(oids_1)s)) AS idx LEFT OUTER JOIN pg_catalog.pg_attribute ON pg_catalog.pg_attribute.attnum = idx.attnum AND pg_catalog.pg_attribute.attrelid = idx.indrelid 
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: SELECT pg_catalog.pg_index.indrelid, cls_idx.relname AS relname_index, pg_catalog.pg_index.indisunique, pg_catalog.pg_constraint.conrelid IS NOT NULL AS has_constraint, pg_catalog.pg_index.indoption, cls_idx.reloptions, pg_catalog.pg_am.amname, CASE WHEN (pg_catalog.pg_index.indpred IS NOT NULL) THEN pg_catalog.pg_get_expr(pg_catalog.pg_index.indpred, pg_catalog.pg_index.indrelid) END AS filter_definition, pg_catalog.pg_index.indnkeyatts, false AS indnullsnotdistinct, idx_cols.elements, idx_cols.elements_is_expr 
multiagent-worker  | FROM pg_catalog.pg_index JOIN pg_catalog.pg_class AS cls_idx ON pg_catalog.pg_index.indexrelid = cls_idx.oid JOIN pg_catalog.pg_am ON cls_idx.relam = pg_catalog.pg_am.oid LEFT OUTER JOIN (SELECT idx_attr.indexrelid AS indexrelid, min(idx_attr.indrelid) AS min_1, array_agg(idx_attr.element ORDER BY idx_attr.ord) AS elements, array_agg(idx_attr.is_expr ORDER BY idx_attr.ord) AS elements_is_expr 
multiagent-worker  | FROM (SELECT idx.indexrelid AS indexrelid, idx.indrelid AS indrelid, idx.ord AS ord, CASE WHEN (idx.attnum = %(attnum_1)s) THEN pg_catalog.pg_get_indexdef(idx.indexrelid, idx.ord + %(ord_1)s, %(pg_get_indexdef_1)s) ELSE CAST(pg_catalog.pg_attribute.attname AS TEXT) END AS element, idx.attnum = %(attnum_2)s AS is_expr 
multiagent-worker  | FROM (SELECT pg_catalog.pg_index.indexrelid AS indexrelid, pg_catalog.pg_index.indrelid AS indrelid, unnest(pg_catalog.pg_index.indkey) AS attnum, generate_subscripts(pg_catalog.pg_index.indkey, %(generate_subscripts_1)s) AS ord 
multiagent-worker  | FROM pg_catalog.pg_index 
multiagent-worker  | WHERE NOT pg_catalog.pg_index.indisprimary AND pg_catalog.pg_index.indrelid IN (%(oids_1)s)) AS idx LEFT OUTER JOIN pg_catalog.pg_attribute ON pg_catalog.pg_attribute.attnum = idx.attnum AND pg_catalog.pg_attribute.attrelid = idx.indrelid 
multiagent-worker  | WHERE idx.indrelid IN (%(oids_1)s)) AS idx_attr GROUP BY idx_attr.indexrelid) AS idx_cols ON pg_catalog.pg_index.indexrelid = idx_cols.indexrelid LEFT OUTER JOIN pg_catalog.pg_constraint ON pg_catalog.pg_index.indrelid = pg_catalog.pg_constraint.conrelid AND pg_catalog.pg_index.indexrelid = pg_catalog.pg_constraint.conindid AND pg_catalog.pg_constraint.contype = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s]) 
multiagent-worker  | WHERE pg_catalog.pg_index.indrelid IN (%(oids_1)s) AND NOT pg_catalog.pg_index.indisprimary ORDER BY pg_catalog.pg_index.indrelid, cls_idx.relname
multiagent-worker  | WHERE idx.indrelid IN (%(oids_1)s)) AS idx_attr GROUP BY idx_attr.indexrelid) AS idx_cols ON pg_catalog.pg_index.indexrelid = idx_cols.indexrelid LEFT OUTER JOIN pg_catalog.pg_constraint ON pg_catalog.pg_index.indrelid = pg_catalog.pg_constraint.conrelid AND pg_catalog.pg_index.indexrelid = pg_catalog.pg_constraint.conindid AND pg_catalog.pg_constraint.contype = ANY (ARRAY[%(param_1)s, %(param_2)s, %(param_3)s]) 
multiagent-worker  | WHERE pg_catalog.pg_index.indrelid IN (%(oids_1)s) AND NOT pg_catalog.pg_index.indisprimary ORDER BY pg_catalog.pg_index.indrelid, cls_idx.relname
multiagent-worker  | 2025-03-20 10:25:46,181 INFO sqlalchemy.engine.Engine [cached since 0.1323s ago] {'attnum_1': 0, 'ord_1': 1, 'pg_get_indexdef_1': True, 'attnum_2': 0, 'generate_subscripts_1': 1, 'param_1': 'p', 'param_2': 'u', 'param_3': 'x', 'oids_1': 17377}
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [cached since 0.1323s ago] {'attnum_1': 0, 'ord_1': 1, 'pg_get_indexdef_1': True, 'attnum_2': 0, 'generate_subscripts_1': 1, 'param_1': 'p', 'param_2': 'u', 'param_3': 'x', 'oids_1': 17377}
multiagent-worker  | 2025-03-20 10:25:46,188 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: ROLLBACK
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Existing indexes: {'results_task_id_key', 'idx_results_status_created_at', 'idx_agent_metrics_last_executed_at', 'idx_results_celery_task_id', 'idx_api_requests_method_path', 'idx_provider_performances_recorded_at', 'idx_provider_performances_provider_task', 'idx_provider_capabilities_provider_id_type', 'idx_api_requests_created_at', 'idx_results_query_workflow', 'provider_configs_provider_id_key', 'idx_agent_metrics_agent_task', 'api_requests_request_id_key'}
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Table provider_configs already exists, skipping creation
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Table provider_capabilities already exists, skipping creation
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Index idx_provider_capabilities_provider_id_type already exists, skipping creation
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Table provider_performances already exists, skipping creation
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Index idx_provider_performances_provider_task already exists, skipping creation
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Index idx_provider_performances_recorded_at already exists, skipping creation
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Table results already exists, skipping creation
multiagent-worker  | 2025-03-20 10:25:46,199 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Creating index: ix_results_task_id
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: CREATE UNIQUE INDEX ix_results_task_id ON results (task_id)
multiagent-worker  | 2025-03-20 10:25:46,201 INFO sqlalchemy.engine.Engine CREATE UNIQUE INDEX ix_results_task_id ON results (task_id)
multiagent-worker  | 2025-03-20 10:25:46,203 INFO sqlalchemy.engine.Engine [no key 0.00250s] {}
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [no key 0.00250s] {}
multiagent-worker  | 2025-03-20 10:25:46,224 INFO sqlalchemy.engine.Engine COMMIT
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: COMMIT
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Creating index: ix_results_workflow
multiagent-worker  | 2025-03-20 10:25:46,229 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46,230 INFO sqlalchemy.engine.Engine CREATE INDEX ix_results_workflow ON results (workflow)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_results_workflow ON results (workflow)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [no key 0.00042s] {}
multiagent-worker  | 2025-03-20 10:25:46,231 INFO sqlalchemy.engine.Engine [no key 0.00042s] {}
multiagent-worker  | 2025-03-20 10:25:46,239 INFO sqlalchemy.engine.Engine COMMIT
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: COMMIT
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Creating index: ix_results_status
multiagent-worker  | 2025-03-20 10:25:46,244 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46,246 INFO sqlalchemy.engine.Engine CREATE INDEX ix_results_status ON results (status)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_results_status ON results (status)
multiagent-worker  | 2025-03-20 10:25:46,248 INFO sqlalchemy.engine.Engine [no key 0.00185s] {}
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [no key 0.00185s] {}
multiagent-worker  | 2025-03-20 10:25:46,258 INFO sqlalchemy.engine.Engine COMMIT
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: COMMIT
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Creating index: ix_results_user_id
multiagent-worker  | 2025-03-20 10:25:46,262 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46,263 INFO sqlalchemy.engine.Engine CREATE INDEX ix_results_user_id ON results (user_id)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_results_user_id ON results (user_id)
multiagent-worker  | 2025-03-20 10:25:46,264 INFO sqlalchemy.engine.Engine [no key 0.00073s] {}
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [no key 0.00073s] {}
multiagent-worker  | 2025-03-20 10:25:46,272 INFO sqlalchemy.engine.Engine COMMIT
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: COMMIT
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Creating index: ix_results_celery_task_id
multiagent-worker  | 2025-03-20 10:25:46,274 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46,275 INFO sqlalchemy.engine.Engine CREATE INDEX ix_results_celery_task_id ON results (celery_task_id)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_results_celery_task_id ON results (celery_task_id)
multiagent-worker  | 2025-03-20 10:25:46,276 INFO sqlalchemy.engine.Engine [no key 0.00054s] {}
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [no key 0.00054s] {}
multiagent-worker  | 2025-03-20 10:25:46,281 INFO sqlalchemy.engine.Engine COMMIT
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: COMMIT
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Index idx_results_status_created_at already exists, skipping creation
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Index idx_results_query_workflow already exists, skipping creation
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Creating index: idx_results_user_id_created_at
multiagent-worker  | 2025-03-20 10:25:46,283 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46,284 INFO sqlalchemy.engine.Engine CREATE INDEX idx_results_user_id_created_at ON results (user_id, created_at)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: CREATE INDEX idx_results_user_id_created_at ON results (user_id, created_at)
multiagent-worker  | 2025-03-20 10:25:46,284 INFO sqlalchemy.engine.Engine [no key 0.00036s] {}
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [no key 0.00036s] {}
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: COMMIT
multiagent-worker  | 2025-03-20 10:25:46,290 INFO sqlalchemy.engine.Engine COMMIT
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Index idx_results_celery_task_id already exists, skipping creation
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Table agent_executions already exists, skipping creation
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Creating index: ix_agent_executions_agent_id
multiagent-worker  | 2025-03-20 10:25:46,295 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46,296 INFO sqlalchemy.engine.Engine CREATE INDEX ix_agent_executions_agent_id ON agent_executions (agent_id)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_agent_executions_agent_id ON agent_executions (agent_id)
multiagent-worker  | 2025-03-20 10:25:46,297 INFO sqlalchemy.engine.Engine [no key 0.00083s] {}
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [no key 0.00083s] {}
multiagent-worker  | 2025-03-20 10:25:46,302 INFO sqlalchemy.engine.Engine COMMIT
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: COMMIT
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Creating index: ix_agent_executions_status
multiagent-worker  | 2025-03-20 10:25:46,304 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46,305 INFO sqlalchemy.engine.Engine CREATE INDEX ix_agent_executions_status ON agent_executions (status)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_agent_executions_status ON agent_executions (status)
multiagent-worker  | 2025-03-20 10:25:46,305 INFO sqlalchemy.engine.Engine [no key 0.00045s] {}
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [no key 0.00045s] {}
multiagent-worker  | 2025-03-20 10:25:46,310 INFO sqlalchemy.engine.Engine COMMIT
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: COMMIT
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Creating index: idx_agent_executions_agent_id_status
multiagent-worker  | 2025-03-20 10:25:46,312 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46,313 INFO sqlalchemy.engine.Engine CREATE INDEX idx_agent_executions_agent_id_status ON agent_executions (agent_id, status)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: CREATE INDEX idx_agent_executions_agent_id_status ON agent_executions (agent_id, status)
multiagent-worker  | 2025-03-20 10:25:46,314 INFO sqlalchemy.engine.Engine [no key 0.00038s] {}
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [no key 0.00038s] {}
multiagent-worker  | 2025-03-20 10:25:46,319 INFO sqlalchemy.engine.Engine COMMIT
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: COMMIT
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Creating index: ix_agent_executions_result_id
multiagent-worker  | 2025-03-20 10:25:46,321 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46,322 INFO sqlalchemy.engine.Engine CREATE INDEX ix_agent_executions_result_id ON agent_executions (result_id)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_agent_executions_result_id ON agent_executions (result_id)
multiagent-worker  | 2025-03-20 10:25:46,322 INFO sqlalchemy.engine.Engine [no key 0.00050s] {}
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [no key 0.00050s] {}
multiagent-worker  | 2025-03-20 10:25:46,327 INFO sqlalchemy.engine.Engine COMMIT
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: COMMIT
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Table api_requests already exists, skipping creation
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Creating index: ix_api_requests_user_id
multiagent-worker  | 2025-03-20 10:25:46,330 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46,331 INFO sqlalchemy.engine.Engine CREATE INDEX ix_api_requests_user_id ON api_requests (user_id)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_api_requests_user_id ON api_requests (user_id)
multiagent-worker  | 2025-03-20 10:25:46,332 INFO sqlalchemy.engine.Engine [no key 0.00118s] {}
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [no key 0.00118s] {}
multiagent-worker  | 2025-03-20 10:25:46,336 INFO sqlalchemy.engine.Engine COMMIT
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: COMMIT
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Index idx_api_requests_created_at already exists, skipping creation
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Index idx_api_requests_method_path already exists, skipping creation
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Table agent_metrics already exists, skipping creation
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Creating index: ix_agent_metrics_agent_id
multiagent-worker  | 2025-03-20 10:25:46,339 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_agent_metrics_agent_id ON agent_metrics (agent_id)
multiagent-worker  | 2025-03-20 10:25:46,340 INFO sqlalchemy.engine.Engine CREATE INDEX ix_agent_metrics_agent_id ON agent_metrics (agent_id)
multiagent-worker  | 2025-03-20 10:25:46,341 INFO sqlalchemy.engine.Engine [no key 0.00094s] {}
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: [no key 0.00094s] {}
multiagent-worker  | 2025-03-20 10:25:46,345 INFO sqlalchemy.engine.Engine COMMIT
multiagent-worker  | 2025-03-20 10:25:46 [INFO] sqlalchemy.engine.Engine: COMMIT
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Index idx_agent_metrics_agent_task already exists, skipping creation
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Index idx_agent_metrics_last_executed_at already exists, skipping creation
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.db.session: Database initialization complete
multiagent-worker  | 2025-03-20 10:25:46 [INFO] multiagent.app.worker.celery_app: Database initialization complete
multiagent-worker  | [2025-03-20 10:25:46,364: INFO/MainProcess] Worker celery@c37196f0cca2 ready. Configuring additional settings...
multiagent-worker  |  
multiagent-worker  |  -------------- celery@c37196f0cca2 v5.4.0 (opalescent)
multiagent-worker  | --- ***** ----- 
multiagent-worker  | -- ******* ---- Linux-6.8.0-1021-azure-x86_64-with-glibc2.36 2025-03-20 10:25:46
multiagent-worker  | - *** --- * --- 
multiagent-worker  | - ** ---------- [config]
multiagent-worker  | - ** ---------- .> app:         multiagent_llm:0x755eace37a10
multiagent-worker  | - ** ---------- .> transport:   redis://redis:6379/0
multiagent-worker  | - ** ---------- .> results:     redis://redis:6379/0
multiagent-worker  | - *** --- * --- .> concurrency: 4 (prefork)
multiagent-worker  | -- ******* ---- .> task events: OFF (enable -E to monitor tasks in this worker)
multiagent-worker  | --- ***** ----- 
multiagent-worker  |  -------------- [queues]
multiagent-worker  |                 .> agents           exchange=agents(direct) key=agents
multiagent-worker  |                 .> updates          exchange=updates(direct) key=updates
multiagent-worker  |                 .> workflows        exchange=workflows(direct) key=workflows
multiagent-worker  | 
multiagent-worker  | [tasks]
multiagent-worker  |   . app.worker.tasks.execute_workflow_task
multiagent-worker  |   . app.worker.tasks.update_progress
multiagent-worker  | 
multiagent-worker  | [2025-03-20 10:25:46,716: INFO/MainProcess] Connected to redis://redis:6379/0
multiagent-worker  | [2025-03-20 10:25:46,722: INFO/MainProcess] mingle: searching for neighbors
multiagent-worker  | [2025-03-20 10:25:47,730: INFO/MainProcess] mingle: all alone
multiagent-worker  | [2025-03-20 10:25:47,777: INFO/MainProcess] Celery worker is ready to accept tasks
multiagent-worker  | [2025-03-20 10:25:47,779: INFO/MainProcess] celery@c37196f0cca2 ready.
multiagent-worker  | [2025-03-20 10:25:50,976: INFO/MainProcess] Events of group {task} enabled by remote.
multiagent-worker  | [2025-03-20 10:25:53,657: INFO/MainProcess] Task app.worker.tasks.execute_workflow_task[6fb94830-46ef-4a0d-a5f6-cc5c2de8845d] received
multiagent-worker  | [2025-03-20 10:25:53,672: INFO/ForkPoolWorker-1] Starting task: app.worker.tasks.execute_workflow_task (ID: 6fb94830-46ef-4a0d-a5f6-cc5c2de8845d)
multiagent-worker  | [2025-03-20 10:25:53,691: INFO/ForkPoolWorker-1] 🚀 DEBUG POINT 1: Task started with workflow_id=research, input_data keys=['task_id', 'query', 'user_id', 'parameters', 'trace_id', 'priority']
multiagent-worker  | [2025-03-20 10:25:53,691: WARNING/ForkPoolWorker-1] 
multiagent-worker  | === WORKFLOW TASK EXECUTION STARTED ===
multiagent-worker  | Workflow ID: research
multiagent-worker  | Input Data Keys: ['task_id', 'query', 'user_id', 'parameters', 'trace_id', 'priority']
multiagent-worker  | [2025-03-20 10:25:53,693: INFO/ForkPoolWorker-1] 📋 DEBUG POINT 2: Extracted data - task_id=7ddbccc4-8b9a-4b97-8fab-63e4db8c4330, user_id=string, query_preview=nelly
multiagent-worker  | [2025-03-20 10:25:53,693: WARNING/ForkPoolWorker-1] Extracted data:
multiagent-worker  | Task ID: 7ddbccc4-8b9a-4b97-8fab-63e4db8c4330
multiagent-worker  | User ID: string
multiagent-worker  | Query: nelly
multiagent-worker  | [2025-03-20 10:25:53,693: INFO/ForkPoolWorker-1] 🔄 Starting workflow execution: workflow=research, task_id=7ddbccc4-8b9a-4b97-8fab-63e4db8c4330, user_id=string, query=nelly
multiagent-worker  | [2025-03-20 10:25:53,696: WARNING/ForkPoolWorker-1] Input parameters: {}
multiagent-worker  | [2025-03-20 10:25:53,696: INFO/ForkPoolWorker-1] 💾 DEBUG POINT 3: About to perform database operations for task_id=7ddbccc4-8b9a-4b97-8fab-63e4db8c4330
multiagent-worker  | [2025-03-20 10:25:53,696: WARNING/ForkPoolWorker-1] Preparing database operations for task_id=7ddbccc4-8b9a-4b97-8fab-63e4db8c4330
multiagent-worker  | [2025-03-20 10:25:53,697: INFO/ForkPoolWorker-1] 🆔 Celery task ID: 6fb94830-46ef-4a0d-a5f6-cc5c2de8845d
multiagent-worker  | [2025-03-20 10:25:53,697: WARNING/ForkPoolWorker-1] Celery task ID: 6fb94830-46ef-4a0d-a5f6-cc5c2de8845d
multiagent-worker  | 2025-03-20 10:25:53,701 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | [2025-03-20 10:25:53,701: INFO/ForkPoolWorker-1] BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:53,705 INFO sqlalchemy.engine.Engine SELECT 1
multiagent-worker  | 2025-03-20 10:25:53,705 INFO sqlalchemy.engine.Engine [generated in 0.00057s] {}
multiagent-worker  | [2025-03-20 10:25:53,705: INFO/ForkPoolWorker-1] SELECT 1
multiagent-worker  | [2025-03-20 10:25:53,705: INFO/ForkPoolWorker-1] [generated in 0.00057s] {}
multiagent-worker  | [2025-03-20 10:25:53,711: INFO/ForkPoolWorker-1] ✅ Database connection verified: True
multiagent-worker  | [2025-03-20 10:25:53,713: WARNING/ForkPoolWorker-1] Database connection verified: True
multiagent-worker  | 2025-03-20 10:25:53,714 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | [2025-03-20 10:25:53,714: INFO/ForkPoolWorker-1] ROLLBACK
multiagent-worker  | 2025-03-20 10:25:53,772 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | [2025-03-20 10:25:53,772: INFO/ForkPoolWorker-1] BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:53,780 INFO sqlalchemy.engine.Engine SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | [2025-03-20 10:25:53,780: INFO/ForkPoolWorker-1] SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | 2025-03-20 10:25:53,782 INFO sqlalchemy.engine.Engine [generated in 0.00240s] {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}
multiagent-worker  | [2025-03-20 10:25:53,782: INFO/ForkPoolWorker-1] [generated in 0.00240s] {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}
multiagent-worker  | 2025-03-20 10:25:53,789 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | [2025-03-20 10:25:53,789: INFO/ForkPoolWorker-1] ROLLBACK
multiagent-worker  | [2025-03-20 10:25:53,793: ERROR/ForkPoolWorker-1] ❌ Failed to save task to database: (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | psycopg2.errors.UndefinedColumn: column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | 
multiagent-worker  | The above exception was the direct cause of the following exception:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 117, in execute_workflow_task
multiagent-worker  |     existing_record = crud_result.get_by_task_id(db=db, task_id=task_id)
multiagent-worker  |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 32, in get_by_task_id
multiagent-worker  |     result = db.query(Result).filter(Result.task_id == task_id).first()
multiagent-worker  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2759, in first
multiagent-worker  |     return self.limit(1)._iter().first()  # type: ignore
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2858, in _iter
multiagent-worker  |     result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
multiagent-worker  |                                                   ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2251, in _execute_internal
multiagent-worker  |     result: Result[Any] = compile_state_cls.orm_execute_statement(
multiagent-worker  |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 306, in orm_execute_statement
multiagent-worker  |     result = conn.execute(
multiagent-worker  |              ^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1416, in execute
multiagent-worker  |     return meth(
multiagent-worker  |            ^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
multiagent-worker  |     return connection._execute_clauseelement(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
multiagent-worker  |     ret = self._execute_context(
multiagent-worker  |           ^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1843, in _execute_context
multiagent-worker  |     return self._exec_single_context(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
multiagent-worker  |     self._handle_dbapi_exception(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2352, in _handle_dbapi_exception
multiagent-worker  |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:25:53,836: WARNING/ForkPoolWorker-1] ERROR: Failed to save task to database: (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:25:53,836: INFO/ForkPoolWorker-1] 🔄 Sending initial progress update for task 7ddbccc4-8b9a-4b97-8fab-63e4db8c4330
multiagent-worker  | [2025-03-20 10:25:53,836: WARNING/ForkPoolWorker-1] Sending initial progress update for task 7ddbccc4-8b9a-4b97-8fab-63e4db8c4330
multiagent-worker  | [2025-03-20 10:25:53,885: INFO/ForkPoolWorker-1] 🧩 DEBUG POINT 4: About to initialize components for task_id=7ddbccc4-8b9a-4b97-8fab-63e4db8c4330
multiagent-worker  | [2025-03-20 10:25:53,885: WARNING/ForkPoolWorker-1] About to initialize components for task_id=7ddbccc4-8b9a-4b97-8fab-63e4db8c4330
multiagent-worker  | [2025-03-20 10:25:53,886: INFO/ForkPoolWorker-1] 🔧 Setting up execution environment
multiagent-worker  | [2025-03-20 10:25:53,886: WARNING/ForkPoolWorker-1] Setting up execution environment
multiagent-worker  | [2025-03-20 10:25:53,892: INFO/MainProcess] Task app.worker.tasks.update_progress[3a4947ea-7012-4bec-ac49-ff3cb8e86693] received
multiagent-worker  | [2025-03-20 10:25:53,949: INFO/ForkPoolWorker-2] Starting task: app.worker.tasks.update_progress (ID: 3a4947ea-7012-4bec-ac49-ff3cb8e86693)
multiagent-worker  | [2025-03-20 10:25:54,006: WARNING/ForkPoolWorker-2] Updating progress for task 7ddbccc4-8b9a-4b97-8fab-63e4db8c4330: status=processing, progress=10, step=Initializing workflow execution
multiagent-worker  | [2025-03-20 10:25:54,019: ERROR/ForkPoolWorker-2] Error updating task in queue: TaskQueue.update_task_status() takes from 3 to 6 positional arguments but 7 were given
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 583, in update_progress
multiagent-worker  |     asyncio.run(task_queue.update_task_status(task_id, status, progress, current_step, result, error))
multiagent-worker  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  | TypeError: TaskQueue.update_task_status() takes from 3 to 6 positional arguments but 7 were given
multiagent-worker  | [2025-03-20 10:25:54,034: WARNING/ForkPoolWorker-2] ERROR: Error updating task in queue: TaskQueue.update_task_status() takes from 3 to 6 positional arguments but 7 were given
multiagent-worker  | 2025-03-20 10:25:54,045 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | [2025-03-20 10:25:54,045: INFO/ForkPoolWorker-2] BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:54,055 INFO sqlalchemy.engine.Engine SELECT 1
multiagent-worker  | [2025-03-20 10:25:54,055: INFO/ForkPoolWorker-2] SELECT 1
multiagent-worker  | 2025-03-20 10:25:54,062 INFO sqlalchemy.engine.Engine [generated in 0.01425s] {}
multiagent-worker  | [2025-03-20 10:25:54,062: INFO/ForkPoolWorker-2] [generated in 0.01425s] {}
multiagent-worker  | 2025-03-20 10:25:54,130 INFO sqlalchemy.engine.Engine SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | [2025-03-20 10:25:54,130: INFO/ForkPoolWorker-2] SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | 2025-03-20 10:25:54,141 INFO sqlalchemy.engine.Engine [generated in 0.01073s] {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}
multiagent-worker  | [2025-03-20 10:25:54,141: INFO/ForkPoolWorker-2] [generated in 0.01073s] {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}
multiagent-worker  | 2025-03-20 10:25:54,147 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | [2025-03-20 10:25:54,147: INFO/ForkPoolWorker-2] ROLLBACK
multiagent-worker  | [2025-03-20 10:25:54,150: ERROR/ForkPoolWorker-2] Error updating task in database (attempt 1/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | psycopg2.errors.UndefinedColumn: column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | 
multiagent-worker  | The above exception was the direct cause of the following exception:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 604, in update_progress
multiagent-worker  |     existing_record = crud_result.get_by_task_id(db=db, task_id=task_id)
multiagent-worker  |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 32, in get_by_task_id
multiagent-worker  |     result = db.query(Result).filter(Result.task_id == task_id).first()
multiagent-worker  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2759, in first
multiagent-worker  |     return self.limit(1)._iter().first()  # type: ignore
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2858, in _iter
multiagent-worker  |     result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
multiagent-worker  |                                                   ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2251, in _execute_internal
multiagent-worker  |     result: Result[Any] = compile_state_cls.orm_execute_statement(
multiagent-worker  |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 306, in orm_execute_statement
multiagent-worker  |     result = conn.execute(
multiagent-worker  |              ^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1416, in execute
multiagent-worker  |     return meth(
multiagent-worker  |            ^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
multiagent-worker  |     return connection._execute_clauseelement(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
multiagent-worker  |     ret = self._execute_context(
multiagent-worker  |           ^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1843, in _execute_context
multiagent-worker  |     return self._exec_single_context(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
multiagent-worker  |     self._handle_dbapi_exception(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2352, in _handle_dbapi_exception
multiagent-worker  |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:25:54,182: WARNING/ForkPoolWorker-2] ERROR: Error updating task in database (attempt 1/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:25:54,183: INFO/ForkPoolWorker-2] Retrying database update in 1 second...
multiagent-worker  | [2025-03-20 10:25:54,183: WARNING/ForkPoolWorker-2] Retrying database update in 1 second...
multiagent-worker  | 2025-03-20 10:25:55,184 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | [2025-03-20 10:25:55,184: INFO/ForkPoolWorker-2] BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:55,185 INFO sqlalchemy.engine.Engine SELECT 1
multiagent-worker  | [2025-03-20 10:25:55,185: INFO/ForkPoolWorker-2] SELECT 1
multiagent-worker  | 2025-03-20 10:25:55,185 INFO sqlalchemy.engine.Engine [cached since 1.138s ago] {}
multiagent-worker  | [2025-03-20 10:25:55,185: INFO/ForkPoolWorker-2] [cached since 1.138s ago] {}
multiagent-worker  | 2025-03-20 10:25:55,190 INFO sqlalchemy.engine.Engine SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | 2025-03-20 10:25:55,190 INFO sqlalchemy.engine.Engine [cached since 1.06s ago] {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}
multiagent-worker  | [2025-03-20 10:25:55,190: INFO/ForkPoolWorker-2] SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | [2025-03-20 10:25:55,190: INFO/ForkPoolWorker-2] [cached since 1.06s ago] {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}
multiagent-worker  | 2025-03-20 10:25:55,194 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | [2025-03-20 10:25:55,194: INFO/ForkPoolWorker-2] ROLLBACK
multiagent-worker  | [2025-03-20 10:25:55,198: ERROR/ForkPoolWorker-2] Error updating task in database (attempt 2/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | psycopg2.errors.UndefinedColumn: column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | 
multiagent-worker  | The above exception was the direct cause of the following exception:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 604, in update_progress
multiagent-worker  |     existing_record = crud_result.get_by_task_id(db=db, task_id=task_id)
multiagent-worker  |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 32, in get_by_task_id
multiagent-worker  |     result = db.query(Result).filter(Result.task_id == task_id).first()
multiagent-worker  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2759, in first
multiagent-worker  |     return self.limit(1)._iter().first()  # type: ignore
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2858, in _iter
multiagent-worker  |     result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
multiagent-worker  |                                                   ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2251, in _execute_internal
multiagent-worker  |     result: Result[Any] = compile_state_cls.orm_execute_statement(
multiagent-worker  |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 306, in orm_execute_statement
multiagent-worker  |     result = conn.execute(
multiagent-worker  |              ^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1416, in execute
multiagent-worker  |     return meth(
multiagent-worker  |            ^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
multiagent-worker  |     return connection._execute_clauseelement(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
multiagent-worker  |     ret = self._execute_context(
multiagent-worker  |           ^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1843, in _execute_context
multiagent-worker  |     return self._exec_single_context(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
multiagent-worker  |     self._handle_dbapi_exception(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2352, in _handle_dbapi_exception
multiagent-worker  |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:25:55,214: WARNING/ForkPoolWorker-2] ERROR: Error updating task in database (attempt 2/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:25:55,214: INFO/ForkPoolWorker-2] Retrying database update in 1 second...
multiagent-worker  | [2025-03-20 10:25:55,217: WARNING/ForkPoolWorker-2] Retrying database update in 1 second...
multiagent-worker  | [2025-03-20 10:25:55,789: ERROR/ForkPoolWorker-1] ❌ Error setting up workflow environment: No module named 'multiagent.app.agents'
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 234, in execute_workflow_task
multiagent-worker  |     from multiagent.app.orchestrator.manager import AgentManager
multiagent-worker  |   File "/app/multiagent/app/orchestrator/manager.py", line 12, in <module>
multiagent-worker  |     from multiagent.app.agents.base import BaseAgent
multiagent-worker  | ModuleNotFoundError: No module named 'multiagent.app.agents'
multiagent-worker  | [2025-03-20 10:25:55,790: WARNING/ForkPoolWorker-1] ERROR: Error setting up workflow environment: No module named 'multiagent.app.agents'
multiagent-worker  | [2025-03-20 10:25:55,791: INFO/ForkPoolWorker-1] 🔄 Updating progress: Failed - Error during setup
multiagent-worker  | [2025-03-20 10:25:55,791: WARNING/ForkPoolWorker-1] Updating progress: Failed - Error during setup
multiagent-worker  | [2025-03-20 10:25:55,797: INFO/MainProcess] Task app.worker.tasks.update_progress[1d26eb25-f748-46e1-880b-9638d790ad76] received
multiagent-worker  | [2025-03-20 10:25:55,797: ERROR/ForkPoolWorker-1] Error in save_result for task_id 7ddbccc4-8b9a-4b97-8fab-63e4db8c4330: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 65, in save_result
multiagent-worker  |     db.execute("SET TRANSACTION ISOLATION LEVEL READ COMMITTED")
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2149, in _execute_internal
multiagent-worker  |     statement = coercions.expect(roles.StatementRole, statement)
multiagent-worker  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 395, in expect
multiagent-worker  |     resolved = impl._literal_coercion(
multiagent-worker  |                ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 621, in _literal_coercion
multiagent-worker  |     return self._text_coercion(element, argname, **kw)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 614, in _text_coercion
multiagent-worker  |     return _no_text_coercion(element, argname)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 584, in _no_text_coercion
multiagent-worker  |     raise exc_cls(
multiagent-worker  | sqlalchemy.exc.ArgumentError: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | [2025-03-20 10:25:55,803: ERROR/ForkPoolWorker-1] ❌ Failed to save error to database: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 288, in execute_workflow_task
multiagent-worker  |     crud_result.save_result(
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 65, in save_result
multiagent-worker  |     db.execute("SET TRANSACTION ISOLATION LEVEL READ COMMITTED")
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2149, in _execute_internal
multiagent-worker  |     statement = coercions.expect(roles.StatementRole, statement)
multiagent-worker  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 395, in expect
multiagent-worker  |     resolved = impl._literal_coercion(
multiagent-worker  |                ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 621, in _literal_coercion
multiagent-worker  |     return self._text_coercion(element, argname, **kw)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 614, in _text_coercion
multiagent-worker  |     return _no_text_coercion(element, argname)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 584, in _no_text_coercion
multiagent-worker  |     raise exc_cls(
multiagent-worker  | sqlalchemy.exc.ArgumentError: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | [2025-03-20 10:25:55,807: WARNING/ForkPoolWorker-1] ERROR: Failed to save error to database: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | [2025-03-20 10:25:55,810: ERROR/ForkPoolWorker-1] Workflow execution failed: Error setting up workflow environment: No module named 'multiagent.app.agents'
multiagent-worker  | Workflow ID: research, Task ID: 7ddbccc4-8b9a-4b97-8fab-63e4db8c4330
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 234, in execute_workflow_task
multiagent-worker  |     from multiagent.app.orchestrator.manager import AgentManager
multiagent-worker  |   File "/app/multiagent/app/orchestrator/manager.py", line 12, in <module>
multiagent-worker  |     from multiagent.app.agents.base import BaseAgent
multiagent-worker  | ModuleNotFoundError: No module named 'multiagent.app.agents'
multiagent-worker  | 
multiagent-worker  | During handling of the above exception, another exception occurred:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 316, in execute_workflow_task
multiagent-worker  |     raise Exception(error_msg)
multiagent-worker  | Exception: Error setting up workflow environment: No module named 'multiagent.app.agents'
multiagent-worker  | [2025-03-20 10:25:55,812: WARNING/ForkPoolWorker-1] ERROR: Workflow execution failed: Error setting up workflow environment: No module named 'multiagent.app.agents'
multiagent-worker  | [2025-03-20 10:25:55,812: ERROR/ForkPoolWorker-1] Error in save_result for task_id 7ddbccc4-8b9a-4b97-8fab-63e4db8c4330: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 65, in save_result
multiagent-worker  |     db.execute("SET TRANSACTION ISOLATION LEVEL READ COMMITTED")
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2149, in _execute_internal
multiagent-worker  |     statement = coercions.expect(roles.StatementRole, statement)
multiagent-worker  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 395, in expect
multiagent-worker  |     resolved = impl._literal_coercion(
multiagent-worker  |                ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 621, in _literal_coercion
multiagent-worker  |     return self._text_coercion(element, argname, **kw)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 614, in _text_coercion
multiagent-worker  |     return _no_text_coercion(element, argname)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 584, in _no_text_coercion
multiagent-worker  |     raise exc_cls(
multiagent-worker  | sqlalchemy.exc.ArgumentError: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | [2025-03-20 10:25:55,813: ERROR/ForkPoolWorker-1] Error saving failure result (attempt 1/3): Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 498, in execute_workflow_task
multiagent-worker  |     crud_result.save_result(
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 65, in save_result
multiagent-worker  |     db.execute("SET TRANSACTION ISOLATION LEVEL READ COMMITTED")
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2149, in _execute_internal
multiagent-worker  |     statement = coercions.expect(roles.StatementRole, statement)
multiagent-worker  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 395, in expect
multiagent-worker  |     resolved = impl._literal_coercion(
multiagent-worker  |                ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 621, in _literal_coercion
multiagent-worker  |     return self._text_coercion(element, argname, **kw)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 614, in _text_coercion
multiagent-worker  |     return _no_text_coercion(element, argname)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 584, in _no_text_coercion
multiagent-worker  |     raise exc_cls(
multiagent-worker  | sqlalchemy.exc.ArgumentError: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | [2025-03-20 10:25:55,816: WARNING/ForkPoolWorker-1] ERROR: Error saving failure result (attempt 1/3): Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | 2025-03-20 10:25:56,218 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | [2025-03-20 10:25:56,218: INFO/ForkPoolWorker-2] BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:56,221 INFO sqlalchemy.engine.Engine SELECT 1
multiagent-worker  | [2025-03-20 10:25:56,221: INFO/ForkPoolWorker-2] SELECT 1
multiagent-worker  | 2025-03-20 10:25:56,223 INFO sqlalchemy.engine.Engine [cached since 2.175s ago] {}
multiagent-worker  | [2025-03-20 10:25:56,223: INFO/ForkPoolWorker-2] [cached since 2.175s ago] {}
multiagent-worker  | 2025-03-20 10:25:56,226 INFO sqlalchemy.engine.Engine SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | 2025-03-20 10:25:56,228 INFO sqlalchemy.engine.Engine [cached since 2.098s ago] {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}
multiagent-worker  | [2025-03-20 10:25:56,226: INFO/ForkPoolWorker-2] SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | 2025-03-20 10:25:56,231 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | [2025-03-20 10:25:56,228: INFO/ForkPoolWorker-2] [cached since 2.098s ago] {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}
multiagent-worker  | [2025-03-20 10:25:56,231: INFO/ForkPoolWorker-2] ROLLBACK
multiagent-worker  | [2025-03-20 10:25:56,234: ERROR/ForkPoolWorker-2] Error updating task in database (attempt 3/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | psycopg2.errors.UndefinedColumn: column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | 
multiagent-worker  | The above exception was the direct cause of the following exception:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 604, in update_progress
multiagent-worker  |     existing_record = crud_result.get_by_task_id(db=db, task_id=task_id)
multiagent-worker  |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 32, in get_by_task_id
multiagent-worker  |     result = db.query(Result).filter(Result.task_id == task_id).first()
multiagent-worker  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2759, in first
multiagent-worker  |     return self.limit(1)._iter().first()  # type: ignore
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2858, in _iter
multiagent-worker  |     result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
multiagent-worker  |                                                   ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2251, in _execute_internal
multiagent-worker  |     result: Result[Any] = compile_state_cls.orm_execute_statement(
multiagent-worker  |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 306, in orm_execute_statement
multiagent-worker  |     result = conn.execute(
multiagent-worker  |              ^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1416, in execute
multiagent-worker  |     return meth(
multiagent-worker  |            ^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
multiagent-worker  |     return connection._execute_clauseelement(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
multiagent-worker  |     ret = self._execute_context(
multiagent-worker  |           ^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1843, in _execute_context
multiagent-worker  |     return self._exec_single_context(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
multiagent-worker  |     self._handle_dbapi_exception(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2352, in _handle_dbapi_exception
multiagent-worker  |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:25:56,239: WARNING/ForkPoolWorker-2] ERROR: Error updating task in database (attempt 3/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:25:56,244: INFO/ForkPoolWorker-2] Task app.worker.tasks.update_progress[3a4947ea-7012-4bec-ac49-ff3cb8e86693] succeeded in 2.295909751000181s: {'task_id': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'status': 'processing', 'progress': 10, 'queue_update_error': 'TaskQueue.update_task_status() takes from 3 to 6 positional arguments but 7 were given', 'db_update_success': False}
multiagent-worker  | [2025-03-20 10:25:56,245: INFO/ForkPoolWorker-2] Task completed: app.worker.tasks.update_progress (ID: 3a4947ea-7012-4bec-ac49-ff3cb8e86693, State: SUCCESS)
multiagent-worker  | [2025-03-20 10:25:56,251: INFO/ForkPoolWorker-2] Starting task: app.worker.tasks.update_progress (ID: 1d26eb25-f748-46e1-880b-9638d790ad76)
multiagent-worker  | [2025-03-20 10:25:56,258: WARNING/ForkPoolWorker-2] Updating progress for task 7ddbccc4-8b9a-4b97-8fab-63e4db8c4330: status=failed, progress=0, step=None
multiagent-worker  | [2025-03-20 10:25:56,258: ERROR/ForkPoolWorker-2] Error updating task in queue: TaskQueue.update_task_status() takes from 3 to 6 positional arguments but 7 were given
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 583, in update_progress
multiagent-worker  |     asyncio.run(task_queue.update_task_status(task_id, status, progress, current_step, result, error))
multiagent-worker  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  | TypeError: TaskQueue.update_task_status() takes from 3 to 6 positional arguments but 7 were given
multiagent-worker  | [2025-03-20 10:25:56,259: WARNING/ForkPoolWorker-2] ERROR: Error updating task in queue: TaskQueue.update_task_status() takes from 3 to 6 positional arguments but 7 were given
multiagent-worker  | 2025-03-20 10:25:56,261 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | [2025-03-20 10:25:56,261: INFO/ForkPoolWorker-2] BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:56,263 INFO sqlalchemy.engine.Engine SELECT 1
multiagent-worker  | [2025-03-20 10:25:56,263: INFO/ForkPoolWorker-2] SELECT 1
multiagent-worker  | 2025-03-20 10:25:56,264 INFO sqlalchemy.engine.Engine [cached since 2.216s ago] {}
multiagent-worker  | [2025-03-20 10:25:56,264: INFO/ForkPoolWorker-2] [cached since 2.216s ago] {}
multiagent-worker  | 2025-03-20 10:25:56,270 INFO sqlalchemy.engine.Engine SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | [2025-03-20 10:25:56,270: INFO/ForkPoolWorker-2] SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | 2025-03-20 10:25:56,270 INFO sqlalchemy.engine.Engine [cached since 2.141s ago] {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}
multiagent-worker  | [2025-03-20 10:25:56,270: INFO/ForkPoolWorker-2] [cached since 2.141s ago] {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}
multiagent-worker  | 2025-03-20 10:25:56,274 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | [2025-03-20 10:25:56,274: INFO/ForkPoolWorker-2] ROLLBACK
multiagent-worker  | [2025-03-20 10:25:56,277: ERROR/ForkPoolWorker-2] Error updating task in database (attempt 1/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | psycopg2.errors.UndefinedColumn: column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | 
multiagent-worker  | The above exception was the direct cause of the following exception:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 604, in update_progress
multiagent-worker  |     existing_record = crud_result.get_by_task_id(db=db, task_id=task_id)
multiagent-worker  |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 32, in get_by_task_id
multiagent-worker  |     result = db.query(Result).filter(Result.task_id == task_id).first()
multiagent-worker  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2759, in first
multiagent-worker  |     return self.limit(1)._iter().first()  # type: ignore
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2858, in _iter
multiagent-worker  |     result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
multiagent-worker  |                                                   ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2251, in _execute_internal
multiagent-worker  |     result: Result[Any] = compile_state_cls.orm_execute_statement(
multiagent-worker  |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 306, in orm_execute_statement
multiagent-worker  |     result = conn.execute(
multiagent-worker  |              ^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1416, in execute
multiagent-worker  |     return meth(
multiagent-worker  |            ^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
multiagent-worker  |     return connection._execute_clauseelement(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
multiagent-worker  |     ret = self._execute_context(
multiagent-worker  |           ^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1843, in _execute_context
multiagent-worker  |     return self._exec_single_context(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
multiagent-worker  |     self._handle_dbapi_exception(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2352, in _handle_dbapi_exception
multiagent-worker  |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:25:56,284: WARNING/ForkPoolWorker-2] ERROR: Error updating task in database (attempt 1/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:25:56,284: INFO/ForkPoolWorker-2] Retrying database update in 1 second...
multiagent-worker  | [2025-03-20 10:25:56,285: WARNING/ForkPoolWorker-2] Retrying database update in 1 second...
multiagent-worker  | [2025-03-20 10:25:56,817: ERROR/ForkPoolWorker-1] Error in save_result for task_id 7ddbccc4-8b9a-4b97-8fab-63e4db8c4330: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 65, in save_result
multiagent-worker  |     db.execute("SET TRANSACTION ISOLATION LEVEL READ COMMITTED")
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2149, in _execute_internal
multiagent-worker  |     statement = coercions.expect(roles.StatementRole, statement)
multiagent-worker  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 395, in expect
multiagent-worker  |     resolved = impl._literal_coercion(
multiagent-worker  |                ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 621, in _literal_coercion
multiagent-worker  |     return self._text_coercion(element, argname, **kw)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 614, in _text_coercion
multiagent-worker  |     return _no_text_coercion(element, argname)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 584, in _no_text_coercion
multiagent-worker  |     raise exc_cls(
multiagent-worker  | sqlalchemy.exc.ArgumentError: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | [2025-03-20 10:25:56,820: ERROR/ForkPoolWorker-1] Error saving failure result (attempt 2/3): Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 498, in execute_workflow_task
multiagent-worker  |     crud_result.save_result(
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 65, in save_result
multiagent-worker  |     db.execute("SET TRANSACTION ISOLATION LEVEL READ COMMITTED")
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2149, in _execute_internal
multiagent-worker  |     statement = coercions.expect(roles.StatementRole, statement)
multiagent-worker  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 395, in expect
multiagent-worker  |     resolved = impl._literal_coercion(
multiagent-worker  |                ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 621, in _literal_coercion
multiagent-worker  |     return self._text_coercion(element, argname, **kw)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 614, in _text_coercion
multiagent-worker  |     return _no_text_coercion(element, argname)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 584, in _no_text_coercion
multiagent-worker  |     raise exc_cls(
multiagent-worker  | sqlalchemy.exc.ArgumentError: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | [2025-03-20 10:25:56,826: WARNING/ForkPoolWorker-1] ERROR: Error saving failure result (attempt 2/3): Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | 2025-03-20 10:25:57,286 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | [2025-03-20 10:25:57,286: INFO/ForkPoolWorker-2] BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:57,288 INFO sqlalchemy.engine.Engine SELECT 1
multiagent-worker  | [2025-03-20 10:25:57,288: INFO/ForkPoolWorker-2] SELECT 1
multiagent-worker  | 2025-03-20 10:25:57,289 INFO sqlalchemy.engine.Engine [cached since 3.242s ago] {}
multiagent-worker  | [2025-03-20 10:25:57,289: INFO/ForkPoolWorker-2] [cached since 3.242s ago] {}
multiagent-worker  | 2025-03-20 10:25:57,293 INFO sqlalchemy.engine.Engine SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | [2025-03-20 10:25:57,293: INFO/ForkPoolWorker-2] SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | 2025-03-20 10:25:57,295 INFO sqlalchemy.engine.Engine [cached since 3.165s ago] {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}
multiagent-worker  | [2025-03-20 10:25:57,295: INFO/ForkPoolWorker-2] [cached since 3.165s ago] {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}
multiagent-worker  | 2025-03-20 10:25:57,298 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | [2025-03-20 10:25:57,298: INFO/ForkPoolWorker-2] ROLLBACK
multiagent-worker  | [2025-03-20 10:25:57,300: ERROR/ForkPoolWorker-2] Error updating task in database (attempt 2/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | psycopg2.errors.UndefinedColumn: column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | 
multiagent-worker  | The above exception was the direct cause of the following exception:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 604, in update_progress
multiagent-worker  |     existing_record = crud_result.get_by_task_id(db=db, task_id=task_id)
multiagent-worker  |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 32, in get_by_task_id
multiagent-worker  |     result = db.query(Result).filter(Result.task_id == task_id).first()
multiagent-worker  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2759, in first
multiagent-worker  |     return self.limit(1)._iter().first()  # type: ignore
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2858, in _iter
multiagent-worker  |     result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
multiagent-worker  |                                                   ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2251, in _execute_internal
multiagent-worker  |     result: Result[Any] = compile_state_cls.orm_execute_statement(
multiagent-worker  |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 306, in orm_execute_statement
multiagent-worker  |     result = conn.execute(
multiagent-worker  |              ^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1416, in execute
multiagent-worker  |     return meth(
multiagent-worker  |            ^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
multiagent-worker  |     return connection._execute_clauseelement(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
multiagent-worker  |     ret = self._execute_context(
multiagent-worker  |           ^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1843, in _execute_context
multiagent-worker  |     return self._exec_single_context(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
multiagent-worker  |     self._handle_dbapi_exception(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2352, in _handle_dbapi_exception
multiagent-worker  |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:25:57,309: WARNING/ForkPoolWorker-2] ERROR: Error updating task in database (attempt 2/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:25:57,309: INFO/ForkPoolWorker-2] Retrying database update in 1 second...
multiagent-worker  | [2025-03-20 10:25:57,310: WARNING/ForkPoolWorker-2] Retrying database update in 1 second...
multiagent-worker  | [2025-03-20 10:25:57,826: ERROR/ForkPoolWorker-1] Error in save_result for task_id 7ddbccc4-8b9a-4b97-8fab-63e4db8c4330: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 65, in save_result
multiagent-worker  |     db.execute("SET TRANSACTION ISOLATION LEVEL READ COMMITTED")
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2149, in _execute_internal
multiagent-worker  |     statement = coercions.expect(roles.StatementRole, statement)
multiagent-worker  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 395, in expect
multiagent-worker  |     resolved = impl._literal_coercion(
multiagent-worker  |                ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 621, in _literal_coercion
multiagent-worker  |     return self._text_coercion(element, argname, **kw)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 614, in _text_coercion
multiagent-worker  |     return _no_text_coercion(element, argname)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 584, in _no_text_coercion
multiagent-worker  |     raise exc_cls(
multiagent-worker  | sqlalchemy.exc.ArgumentError: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | [2025-03-20 10:25:57,827: ERROR/ForkPoolWorker-1] Error saving failure result (attempt 3/3): Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 498, in execute_workflow_task
multiagent-worker  |     crud_result.save_result(
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 65, in save_result
multiagent-worker  |     db.execute("SET TRANSACTION ISOLATION LEVEL READ COMMITTED")
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2149, in _execute_internal
multiagent-worker  |     statement = coercions.expect(roles.StatementRole, statement)
multiagent-worker  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 395, in expect
multiagent-worker  |     resolved = impl._literal_coercion(
multiagent-worker  |                ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 621, in _literal_coercion
multiagent-worker  |     return self._text_coercion(element, argname, **kw)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 614, in _text_coercion
multiagent-worker  |     return _no_text_coercion(element, argname)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 584, in _no_text_coercion
multiagent-worker  |     raise exc_cls(
multiagent-worker  | sqlalchemy.exc.ArgumentError: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | [2025-03-20 10:25:57,832: WARNING/ForkPoolWorker-1] ERROR: Error saving failure result (attempt 3/3): Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | [2025-03-20 10:25:57,839: ERROR/ForkPoolWorker-1] Workflow research failed with error: Error setting up workflow environment: No module named 'multiagent.app.agents'
multiagent-worker  | [2025-03-20 10:25:57,839: WARNING/ForkPoolWorker-1] Workflow research failed with error: Error setting up workflow environment: No module named 'multiagent.app.agents'
multiagent-worker  | [2025-03-20 10:25:57,843: INFO/MainProcess] Task app.worker.tasks.update_progress[1d172622-bc1b-487d-b3a6-8fcc4d378010] received
multiagent-worker  | [2025-03-20 10:25:57,851: INFO/ForkPoolWorker-3] Starting task: app.worker.tasks.update_progress (ID: 1d172622-bc1b-487d-b3a6-8fcc4d378010)
multiagent-worker  | [2025-03-20 10:25:57,875: WARNING/ForkPoolWorker-3] Updating progress for task 7ddbccc4-8b9a-4b97-8fab-63e4db8c4330: status=failed, progress=0, step=None
multiagent-worker  | [2025-03-20 10:25:57,875: ERROR/ForkPoolWorker-3] Error updating task in queue: TaskQueue.update_task_status() takes from 3 to 6 positional arguments but 7 were given
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 583, in update_progress
multiagent-worker  |     asyncio.run(task_queue.update_task_status(task_id, status, progress, current_step, result, error))
multiagent-worker  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  | TypeError: TaskQueue.update_task_status() takes from 3 to 6 positional arguments but 7 were given
multiagent-worker  | [2025-03-20 10:25:57,880: WARNING/ForkPoolWorker-3] ERROR: Error updating task in queue: TaskQueue.update_task_status() takes from 3 to 6 positional arguments but 7 were given
multiagent-worker  | 2025-03-20 10:25:57,888 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | [2025-03-20 10:25:57,888: INFO/ForkPoolWorker-3] BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:57,892 INFO sqlalchemy.engine.Engine SELECT 1
multiagent-worker  | [2025-03-20 10:25:57,892: INFO/ForkPoolWorker-3] SELECT 1
multiagent-worker  | 2025-03-20 10:25:57,895 INFO sqlalchemy.engine.Engine [generated in 0.00440s] {}
multiagent-worker  | [2025-03-20 10:25:57,895: INFO/ForkPoolWorker-3] [generated in 0.00440s] {}
multiagent-worker  | 2025-03-20 10:25:57,946 INFO sqlalchemy.engine.Engine SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | 2025-03-20 10:25:57,951 INFO sqlalchemy.engine.Engine [generated in 0.00515s] {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}
multiagent-worker  | [2025-03-20 10:25:57,946: INFO/ForkPoolWorker-3] SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | [2025-03-20 10:25:57,951: INFO/ForkPoolWorker-3] [generated in 0.00515s] {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}
multiagent-worker  | 2025-03-20 10:25:57,957 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | [2025-03-20 10:25:57,957: INFO/ForkPoolWorker-3] ROLLBACK
multiagent-worker  | [2025-03-20 10:25:57,961: ERROR/ForkPoolWorker-3] Error updating task in database (attempt 1/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | psycopg2.errors.UndefinedColumn: column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | 
multiagent-worker  | The above exception was the direct cause of the following exception:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 604, in update_progress
multiagent-worker  |     existing_record = crud_result.get_by_task_id(db=db, task_id=task_id)
multiagent-worker  |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 32, in get_by_task_id
multiagent-worker  |     result = db.query(Result).filter(Result.task_id == task_id).first()
multiagent-worker  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2759, in first
multiagent-worker  |     return self.limit(1)._iter().first()  # type: ignore
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2858, in _iter
multiagent-worker  |     result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
multiagent-worker  |                                                   ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2251, in _execute_internal
multiagent-worker  |     result: Result[Any] = compile_state_cls.orm_execute_statement(
multiagent-worker  |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 306, in orm_execute_statement
multiagent-worker  |     result = conn.execute(
multiagent-worker  |              ^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1416, in execute
multiagent-worker  |     return meth(
multiagent-worker  |            ^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
multiagent-worker  |     return connection._execute_clauseelement(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
multiagent-worker  |     ret = self._execute_context(
multiagent-worker  |           ^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1843, in _execute_context
multiagent-worker  |     return self._exec_single_context(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
multiagent-worker  |     self._handle_dbapi_exception(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2352, in _handle_dbapi_exception
multiagent-worker  |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:25:57,982: WARNING/ForkPoolWorker-3] ERROR: Error updating task in database (attempt 1/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:25:57,982: INFO/ForkPoolWorker-3] Retrying database update in 1 second...
multiagent-worker  | [2025-03-20 10:25:57,982: WARNING/ForkPoolWorker-3] Retrying database update in 1 second...
multiagent-worker  | [2025-03-20 10:25:58,032: ERROR/ForkPoolWorker-1] Task app.worker.tasks.execute_workflow_task[6fb94830-46ef-4a0d-a5f6-cc5c2de8845d] raised unexpected: Exception("Workflow execution failed: Error setting up workflow environment: No module named 'multiagent.app.agents'")
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 234, in execute_workflow_task
multiagent-worker  |     from multiagent.app.orchestrator.manager import AgentManager
multiagent-worker  |   File "/app/multiagent/app/orchestrator/manager.py", line 12, in <module>
multiagent-worker  |     from multiagent.app.agents.base import BaseAgent
multiagent-worker  | ModuleNotFoundError: No module named 'multiagent.app.agents'
multiagent-worker  | 
multiagent-worker  | During handling of the above exception, another exception occurred:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 316, in execute_workflow_task
multiagent-worker  |     raise Exception(error_msg)
multiagent-worker  | Exception: Error setting up workflow environment: No module named 'multiagent.app.agents'
multiagent-worker  | 
multiagent-worker  | During handling of the above exception, another exception occurred:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/celery/app/trace.py", line 453, in trace_task
multiagent-worker  |     R = retval = fun(*args, **kwargs)
multiagent-worker  |                  ^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/celery/app/trace.py", line 736, in __protected_call__
multiagent-worker  |     return self.run(*args, **kwargs)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 542, in execute_workflow_task
multiagent-worker  |     raise Exception(f"Workflow execution failed: {error_msg}")
multiagent-worker  | Exception: Workflow execution failed: Error setting up workflow environment: No module named 'multiagent.app.agents'
multiagent-worker  | [2025-03-20 10:25:58,044: INFO/ForkPoolWorker-1] Task completed: app.worker.tasks.execute_workflow_task (ID: 6fb94830-46ef-4a0d-a5f6-cc5c2de8845d, State: FAILURE)
multiagent-worker  | 2025-03-20 10:25:58,310 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | [2025-03-20 10:25:58,310: INFO/ForkPoolWorker-2] BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:58,311 INFO sqlalchemy.engine.Engine SELECT 1
multiagent-worker  | [2025-03-20 10:25:58,311: INFO/ForkPoolWorker-2] SELECT 1
multiagent-worker  | 2025-03-20 10:25:58,313 INFO sqlalchemy.engine.Engine [cached since 4.265s ago] {}
multiagent-worker  | [2025-03-20 10:25:58,313: INFO/ForkPoolWorker-2] [cached since 4.265s ago] {}
multiagent-worker  | 2025-03-20 10:25:58,316 INFO sqlalchemy.engine.Engine SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | [2025-03-20 10:25:58,316: INFO/ForkPoolWorker-2] SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | 2025-03-20 10:25:58,319 INFO sqlalchemy.engine.Engine [cached since 4.189s ago] {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}
multiagent-worker  | [2025-03-20 10:25:58,319: INFO/ForkPoolWorker-2] [cached since 4.189s ago] {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}
multiagent-worker  | 2025-03-20 10:25:58,321 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | [2025-03-20 10:25:58,321: INFO/ForkPoolWorker-2] ROLLBACK
multiagent-worker  | [2025-03-20 10:25:58,323: ERROR/ForkPoolWorker-2] Error updating task in database (attempt 3/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | psycopg2.errors.UndefinedColumn: column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | 
multiagent-worker  | The above exception was the direct cause of the following exception:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 604, in update_progress
multiagent-worker  |     existing_record = crud_result.get_by_task_id(db=db, task_id=task_id)
multiagent-worker  |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 32, in get_by_task_id
multiagent-worker  |     result = db.query(Result).filter(Result.task_id == task_id).first()
multiagent-worker  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2759, in first
multiagent-worker  |     return self.limit(1)._iter().first()  # type: ignore
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2858, in _iter
multiagent-worker  |     result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
multiagent-worker  |                                                   ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2251, in _execute_internal
multiagent-worker  |     result: Result[Any] = compile_state_cls.orm_execute_statement(
multiagent-worker  |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 306, in orm_execute_statement
multiagent-worker  |     result = conn.execute(
multiagent-worker  |              ^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1416, in execute
multiagent-worker  |     return meth(
multiagent-worker  |            ^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
multiagent-worker  |     return connection._execute_clauseelement(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
multiagent-worker  |     ret = self._execute_context(
multiagent-worker  |           ^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1843, in _execute_context
multiagent-worker  |     return self._exec_single_context(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
multiagent-worker  |     self._handle_dbapi_exception(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2352, in _handle_dbapi_exception
multiagent-worker  |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:25:58,330: WARNING/ForkPoolWorker-2] ERROR: Error updating task in database (attempt 3/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:25:58,334: INFO/ForkPoolWorker-2] Task app.worker.tasks.update_progress[1d26eb25-f748-46e1-880b-9638d790ad76] succeeded in 2.0830704090003564s: {'task_id': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'status': 'failed', 'progress': 0, 'queue_update_error': 'TaskQueue.update_task_status() takes from 3 to 6 positional arguments but 7 were given', 'db_update_success': False}
multiagent-worker  | [2025-03-20 10:25:58,334: INFO/ForkPoolWorker-2] Task completed: app.worker.tasks.update_progress (ID: 1d26eb25-f748-46e1-880b-9638d790ad76, State: SUCCESS)
multiagent-worker  | 2025-03-20 10:25:58,983 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | [2025-03-20 10:25:58,983: INFO/ForkPoolWorker-3] BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:25:58,984 INFO sqlalchemy.engine.Engine SELECT 1
multiagent-worker  | [2025-03-20 10:25:58,984: INFO/ForkPoolWorker-3] SELECT 1
multiagent-worker  | 2025-03-20 10:25:58,985 INFO sqlalchemy.engine.Engine [cached since 1.094s ago] {}
multiagent-worker  | [2025-03-20 10:25:58,985: INFO/ForkPoolWorker-3] [cached since 1.094s ago] {}
multiagent-worker  | 2025-03-20 10:25:58,988 INFO sqlalchemy.engine.Engine SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | [2025-03-20 10:25:58,988: INFO/ForkPoolWorker-3] SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | 2025-03-20 10:25:58,990 INFO sqlalchemy.engine.Engine [cached since 1.043s ago] {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}
multiagent-worker  | [2025-03-20 10:25:58,990: INFO/ForkPoolWorker-3] [cached since 1.043s ago] {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}
multiagent-worker  | 2025-03-20 10:25:58,991 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | [2025-03-20 10:25:58,991: INFO/ForkPoolWorker-3] ROLLBACK
multiagent-worker  | [2025-03-20 10:25:58,994: ERROR/ForkPoolWorker-3] Error updating task in database (attempt 2/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | psycopg2.errors.UndefinedColumn: column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | 
multiagent-worker  | The above exception was the direct cause of the following exception:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 604, in update_progress
multiagent-worker  |     existing_record = crud_result.get_by_task_id(db=db, task_id=task_id)
multiagent-worker  |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 32, in get_by_task_id
multiagent-worker  |     result = db.query(Result).filter(Result.task_id == task_id).first()
multiagent-worker  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2759, in first
multiagent-worker  |     return self.limit(1)._iter().first()  # type: ignore
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2858, in _iter
multiagent-worker  |     result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
multiagent-worker  |                                                   ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2251, in _execute_internal
multiagent-worker  |     result: Result[Any] = compile_state_cls.orm_execute_statement(
multiagent-worker  |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 306, in orm_execute_statement
multiagent-worker  |     result = conn.execute(
multiagent-worker  |              ^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1416, in execute
multiagent-worker  |     return meth(
multiagent-worker  |            ^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
multiagent-worker  |     return connection._execute_clauseelement(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
multiagent-worker  |     ret = self._execute_context(
multiagent-worker  |           ^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1843, in _execute_context
multiagent-worker  |     return self._exec_single_context(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
multiagent-worker  |     self._handle_dbapi_exception(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2352, in _handle_dbapi_exception
multiagent-worker  |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:25:59,000: WARNING/ForkPoolWorker-3] ERROR: Error updating task in database (attempt 2/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:25:59,001: INFO/ForkPoolWorker-3] Retrying database update in 1 second...
multiagent-worker  | [2025-03-20 10:25:59,001: WARNING/ForkPoolWorker-3] Retrying database update in 1 second...
multiagent-worker  | [2025-03-20 10:26:00,002: INFO/ForkPoolWorker-3] BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:26:00,002 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:26:00,002 INFO sqlalchemy.engine.Engine SELECT 1
multiagent-worker  | [2025-03-20 10:26:00,002: INFO/ForkPoolWorker-3] SELECT 1
multiagent-worker  | 2025-03-20 10:26:00,002 INFO sqlalchemy.engine.Engine [cached since 2.111s ago] {}
multiagent-worker  | [2025-03-20 10:26:00,002: INFO/ForkPoolWorker-3] [cached since 2.111s ago] {}
multiagent-worker  | 2025-03-20 10:26:00,006 INFO sqlalchemy.engine.Engine SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | [2025-03-20 10:26:00,006: INFO/ForkPoolWorker-3] SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | 2025-03-20 10:26:00,007 INFO sqlalchemy.engine.Engine [cached since 2.061s ago] {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}
multiagent-worker  | [2025-03-20 10:26:00,007: INFO/ForkPoolWorker-3] [cached since 2.061s ago] {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}
multiagent-worker  | 2025-03-20 10:26:00,009 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | [2025-03-20 10:26:00,009: INFO/ForkPoolWorker-3] ROLLBACK
multiagent-worker  | [2025-03-20 10:26:00,011: ERROR/ForkPoolWorker-3] Error updating task in database (attempt 3/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | psycopg2.errors.UndefinedColumn: column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | 
multiagent-worker  | The above exception was the direct cause of the following exception:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 604, in update_progress
multiagent-worker  |     existing_record = crud_result.get_by_task_id(db=db, task_id=task_id)
multiagent-worker  |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 32, in get_by_task_id
multiagent-worker  |     result = db.query(Result).filter(Result.task_id == task_id).first()
multiagent-worker  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2759, in first
multiagent-worker  |     return self.limit(1)._iter().first()  # type: ignore
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2858, in _iter
multiagent-worker  |     result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
multiagent-worker  |                                                   ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2251, in _execute_internal
multiagent-worker  |     result: Result[Any] = compile_state_cls.orm_execute_statement(
multiagent-worker  |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 306, in orm_execute_statement
multiagent-worker  |     result = conn.execute(
multiagent-worker  |              ^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1416, in execute
multiagent-worker  |     return meth(
multiagent-worker  |            ^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
multiagent-worker  |     return connection._execute_clauseelement(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
multiagent-worker  |     ret = self._execute_context(
multiagent-worker  |           ^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1843, in _execute_context
multiagent-worker  |     return self._exec_single_context(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
multiagent-worker  |     self._handle_dbapi_exception(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2352, in _handle_dbapi_exception
multiagent-worker  |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:26:00,015: WARNING/ForkPoolWorker-3] ERROR: Error updating task in database (attempt 3/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:26:00,022: INFO/ForkPoolWorker-3] Task app.worker.tasks.update_progress[1d172622-bc1b-487d-b3a6-8fcc4d378010] succeeded in 2.171535274999769s: {'task_id': '7ddbccc4-8b9a-4b97-8fab-63e4db8c4330', 'status': 'failed', 'progress': 0, 'queue_update_error': 'TaskQueue.update_task_status() takes from 3 to 6 positional arguments but 7 were given', 'db_update_success': False}
multiagent-worker  | [2025-03-20 10:26:00,023: INFO/ForkPoolWorker-3] Task completed: app.worker.tasks.update_progress (ID: 1d172622-bc1b-487d-b3a6-8fcc4d378010, State: SUCCESS)
multiagent-worker  | [2025-03-20 10:28:01,332: INFO/MainProcess] Task app.worker.tasks.execute_workflow_task[4cf0e9e7-af70-431d-87c7-86da1d996551] received
multiagent-worker  | [2025-03-20 10:28:01,340: INFO/ForkPoolWorker-1] Starting task: app.worker.tasks.execute_workflow_task (ID: 4cf0e9e7-af70-431d-87c7-86da1d996551)
multiagent-worker  | [2025-03-20 10:28:01,345: INFO/ForkPoolWorker-1] 🚀 DEBUG POINT 1: Task started with workflow_id=research, input_data keys=['task_id', 'query', 'user_id', 'parameters', 'trace_id', 'priority']
multiagent-worker  | [2025-03-20 10:28:01,345: WARNING/ForkPoolWorker-1] 
multiagent-worker  | === WORKFLOW TASK EXECUTION STARTED ===
multiagent-worker  | Workflow ID: research
multiagent-worker  | Input Data Keys: ['task_id', 'query', 'user_id', 'parameters', 'trace_id', 'priority']
multiagent-worker  | [2025-03-20 10:28:01,345: INFO/ForkPoolWorker-1] 📋 DEBUG POINT 2: Extracted data - task_id=29834e16-81a4-44bf-9b25-297d9b165456, user_id=string, query_preview=jesus
multiagent-worker  | [2025-03-20 10:28:01,347: WARNING/ForkPoolWorker-1] Extracted data:
multiagent-worker  | Task ID: 29834e16-81a4-44bf-9b25-297d9b165456
multiagent-worker  | User ID: string
multiagent-worker  | Query: jesus
multiagent-worker  | [2025-03-20 10:28:01,349: INFO/ForkPoolWorker-1] 🔄 Starting workflow execution: workflow=research, task_id=29834e16-81a4-44bf-9b25-297d9b165456, user_id=string, query=jesus
multiagent-worker  | [2025-03-20 10:28:01,350: WARNING/ForkPoolWorker-1] Input parameters: {}
multiagent-worker  | [2025-03-20 10:28:01,350: INFO/ForkPoolWorker-1] 💾 DEBUG POINT 3: About to perform database operations for task_id=29834e16-81a4-44bf-9b25-297d9b165456
multiagent-worker  | [2025-03-20 10:28:01,350: WARNING/ForkPoolWorker-1] Preparing database operations for task_id=29834e16-81a4-44bf-9b25-297d9b165456
multiagent-worker  | [2025-03-20 10:28:01,350: INFO/ForkPoolWorker-1] 🆔 Celery task ID: 4cf0e9e7-af70-431d-87c7-86da1d996551
multiagent-worker  | [2025-03-20 10:28:01,350: WARNING/ForkPoolWorker-1] Celery task ID: 4cf0e9e7-af70-431d-87c7-86da1d996551
multiagent-worker  | 2025-03-20 10:28:01,352 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | [2025-03-20 10:28:01,352: INFO/ForkPoolWorker-1] BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:28:01,354 INFO sqlalchemy.engine.Engine SELECT 1
multiagent-worker  | 2025-03-20 10:28:01,355 INFO sqlalchemy.engine.Engine [cached since 127.7s ago] {}
multiagent-worker  | [2025-03-20 10:28:01,354: INFO/ForkPoolWorker-1] SELECT 1
multiagent-worker  | [2025-03-20 10:28:01,355: INFO/ForkPoolWorker-1] [cached since 127.7s ago] {}
multiagent-worker  | [2025-03-20 10:28:01,357: INFO/ForkPoolWorker-1] ✅ Database connection verified: True
multiagent-worker  | [2025-03-20 10:28:01,358: WARNING/ForkPoolWorker-1] Database connection verified: True
multiagent-worker  | 2025-03-20 10:28:01,359 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | [2025-03-20 10:28:01,359: INFO/ForkPoolWorker-1] ROLLBACK
multiagent-worker  | 2025-03-20 10:28:01,363 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | [2025-03-20 10:28:01,363: INFO/ForkPoolWorker-1] BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:28:01,364 INFO sqlalchemy.engine.Engine SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | [2025-03-20 10:28:01,364: INFO/ForkPoolWorker-1] SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | 2025-03-20 10:28:01,365 INFO sqlalchemy.engine.Engine [cached since 127.6s ago] {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}
multiagent-worker  | [2025-03-20 10:28:01,365: INFO/ForkPoolWorker-1] [cached since 127.6s ago] {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}
multiagent-worker  | 2025-03-20 10:28:01,369 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | [2025-03-20 10:28:01,369: INFO/ForkPoolWorker-1] ROLLBACK
multiagent-worker  | [2025-03-20 10:28:01,372: ERROR/ForkPoolWorker-1] ❌ Failed to save task to database: (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | psycopg2.errors.UndefinedColumn: column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | 
multiagent-worker  | The above exception was the direct cause of the following exception:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 117, in execute_workflow_task
multiagent-worker  |     existing_record = crud_result.get_by_task_id(db=db, task_id=task_id)
multiagent-worker  |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 32, in get_by_task_id
multiagent-worker  |     result = db.query(Result).filter(Result.task_id == task_id).first()
multiagent-worker  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2759, in first
multiagent-worker  |     return self.limit(1)._iter().first()  # type: ignore
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2858, in _iter
multiagent-worker  |     result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
multiagent-worker  |                                                   ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2251, in _execute_internal
multiagent-worker  |     result: Result[Any] = compile_state_cls.orm_execute_statement(
multiagent-worker  |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 306, in orm_execute_statement
multiagent-worker  |     result = conn.execute(
multiagent-worker  |              ^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1416, in execute
multiagent-worker  |     return meth(
multiagent-worker  |            ^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
multiagent-worker  |     return connection._execute_clauseelement(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
multiagent-worker  |     ret = self._execute_context(
multiagent-worker  |           ^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1843, in _execute_context
multiagent-worker  |     return self._exec_single_context(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
multiagent-worker  |     self._handle_dbapi_exception(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2352, in _handle_dbapi_exception
multiagent-worker  |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:28:01,383: WARNING/ForkPoolWorker-1] ERROR: Failed to save task to database: (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:28:01,383: INFO/ForkPoolWorker-1] 🔄 Sending initial progress update for task 29834e16-81a4-44bf-9b25-297d9b165456
multiagent-worker  | [2025-03-20 10:28:01,384: WARNING/ForkPoolWorker-1] Sending initial progress update for task 29834e16-81a4-44bf-9b25-297d9b165456
multiagent-worker  | [2025-03-20 10:28:01,392: INFO/ForkPoolWorker-1] 🧩 DEBUG POINT 4: About to initialize components for task_id=29834e16-81a4-44bf-9b25-297d9b165456
multiagent-worker  | [2025-03-20 10:28:01,394: WARNING/ForkPoolWorker-1] About to initialize components for task_id=29834e16-81a4-44bf-9b25-297d9b165456
multiagent-worker  | [2025-03-20 10:28:01,395: INFO/ForkPoolWorker-1] 🔧 Setting up execution environment
multiagent-worker  | [2025-03-20 10:28:01,396: WARNING/ForkPoolWorker-1] Setting up execution environment
multiagent-worker  | [2025-03-20 10:28:01,402: INFO/MainProcess] Task app.worker.tasks.update_progress[3bd36f2a-9aa8-4d1f-ab47-4d77db1921f1] received
multiagent-worker  | [2025-03-20 10:28:01,417: INFO/ForkPoolWorker-3] Starting task: app.worker.tasks.update_progress (ID: 3bd36f2a-9aa8-4d1f-ab47-4d77db1921f1)
multiagent-worker  | [2025-03-20 10:28:01,415: ERROR/ForkPoolWorker-1] ❌ Error setting up workflow environment: No module named 'multiagent.app.agents'
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 234, in execute_workflow_task
multiagent-worker  |     from multiagent.app.orchestrator.manager import AgentManager
multiagent-worker  |   File "/app/multiagent/app/orchestrator/manager.py", line 12, in <module>
multiagent-worker  |     from multiagent.app.agents.base import BaseAgent
multiagent-worker  | ModuleNotFoundError: No module named 'multiagent.app.agents'
multiagent-worker  | [2025-03-20 10:28:01,426: WARNING/ForkPoolWorker-1] ERROR: Error setting up workflow environment: No module named 'multiagent.app.agents'
multiagent-worker  | [2025-03-20 10:28:01,426: WARNING/ForkPoolWorker-3] Updating progress for task 29834e16-81a4-44bf-9b25-297d9b165456: status=processing, progress=10, step=Initializing workflow execution
multiagent-worker  | [2025-03-20 10:28:01,428: INFO/ForkPoolWorker-1] 🔄 Updating progress: Failed - Error during setup
multiagent-worker  | [2025-03-20 10:28:01,428: WARNING/ForkPoolWorker-1] Updating progress: Failed - Error during setup
multiagent-worker  | [2025-03-20 10:28:01,428: ERROR/ForkPoolWorker-3] Error updating task in queue: TaskQueue.update_task_status() takes from 3 to 6 positional arguments but 7 were given
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 583, in update_progress
multiagent-worker  |     asyncio.run(task_queue.update_task_status(task_id, status, progress, current_step, result, error))
multiagent-worker  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  | TypeError: TaskQueue.update_task_status() takes from 3 to 6 positional arguments but 7 were given
multiagent-worker  | [2025-03-20 10:28:01,431: WARNING/ForkPoolWorker-3] ERROR: Error updating task in queue: TaskQueue.update_task_status() takes from 3 to 6 positional arguments but 7 were given
multiagent-worker  | [2025-03-20 10:28:01,436: INFO/ForkPoolWorker-3] BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:28:01,436 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:28:01,439 INFO sqlalchemy.engine.Engine SELECT 1
multiagent-worker  | [2025-03-20 10:28:01,439: INFO/ForkPoolWorker-3] SELECT 1
multiagent-worker  | 2025-03-20 10:28:01,440 INFO sqlalchemy.engine.Engine [cached since 123.5s ago] {}
multiagent-worker  | [2025-03-20 10:28:01,440: INFO/ForkPoolWorker-3] [cached since 123.5s ago] {}
multiagent-worker  | 2025-03-20 10:28:01,451 INFO sqlalchemy.engine.Engine SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | [2025-03-20 10:28:01,445: ERROR/ForkPoolWorker-1] Error in save_result for task_id 29834e16-81a4-44bf-9b25-297d9b165456: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 65, in save_result
multiagent-worker  |     db.execute("SET TRANSACTION ISOLATION LEVEL READ COMMITTED")
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2149, in _execute_internal
multiagent-worker  |     statement = coercions.expect(roles.StatementRole, statement)
multiagent-worker  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 395, in expect
multiagent-worker  |     resolved = impl._literal_coercion(
multiagent-worker  |                ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 621, in _literal_coercion
multiagent-worker  |     return self._text_coercion(element, argname, **kw)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 614, in _text_coercion
multiagent-worker  |     return _no_text_coercion(element, argname)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 584, in _no_text_coercion
multiagent-worker  |     raise exc_cls(
multiagent-worker  | sqlalchemy.exc.ArgumentError: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | [2025-03-20 10:28:01,453: INFO/MainProcess] Task app.worker.tasks.update_progress[924f3d64-40b5-4cb7-ace3-70ad15861f30] received
multiagent-worker  | [2025-03-20 10:28:01,451: INFO/ForkPoolWorker-3] SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | 2025-03-20 10:28:01,456 INFO sqlalchemy.engine.Engine [cached since 123.5s ago] {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}
multiagent-worker  | [2025-03-20 10:28:01,456: INFO/ForkPoolWorker-3] [cached since 123.5s ago] {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}
multiagent-worker  | 2025-03-20 10:28:01,461 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | [2025-03-20 10:28:01,461: INFO/ForkPoolWorker-3] ROLLBACK
multiagent-worker  | [2025-03-20 10:28:01,454: ERROR/ForkPoolWorker-1] ❌ Failed to save error to database: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 288, in execute_workflow_task
multiagent-worker  |     crud_result.save_result(
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 65, in save_result
multiagent-worker  |     db.execute("SET TRANSACTION ISOLATION LEVEL READ COMMITTED")
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2149, in _execute_internal
multiagent-worker  |     statement = coercions.expect(roles.StatementRole, statement)
multiagent-worker  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 395, in expect
multiagent-worker  |     resolved = impl._literal_coercion(
multiagent-worker  |                ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 621, in _literal_coercion
multiagent-worker  |     return self._text_coercion(element, argname, **kw)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 614, in _text_coercion
multiagent-worker  |     return _no_text_coercion(element, argname)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 584, in _no_text_coercion
multiagent-worker  |     raise exc_cls(
multiagent-worker  | sqlalchemy.exc.ArgumentError: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | [2025-03-20 10:28:01,471: WARNING/ForkPoolWorker-1] ERROR: Failed to save error to database: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | [2025-03-20 10:28:01,473: ERROR/ForkPoolWorker-1] Workflow execution failed: Error setting up workflow environment: No module named 'multiagent.app.agents'
multiagent-worker  | Workflow ID: research, Task ID: 29834e16-81a4-44bf-9b25-297d9b165456
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 234, in execute_workflow_task
multiagent-worker  |     from multiagent.app.orchestrator.manager import AgentManager
multiagent-worker  |   File "/app/multiagent/app/orchestrator/manager.py", line 12, in <module>
multiagent-worker  |     from multiagent.app.agents.base import BaseAgent
multiagent-worker  | ModuleNotFoundError: No module named 'multiagent.app.agents'
multiagent-worker  | 
multiagent-worker  | During handling of the above exception, another exception occurred:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 316, in execute_workflow_task
multiagent-worker  |     raise Exception(error_msg)
multiagent-worker  | Exception: Error setting up workflow environment: No module named 'multiagent.app.agents'
multiagent-worker  | [2025-03-20 10:28:01,475: WARNING/ForkPoolWorker-1] ERROR: Workflow execution failed: Error setting up workflow environment: No module named 'multiagent.app.agents'
multiagent-worker  | [2025-03-20 10:28:01,476: INFO/ForkPoolWorker-2] Starting task: app.worker.tasks.update_progress (ID: 924f3d64-40b5-4cb7-ace3-70ad15861f30)
multiagent-worker  | [2025-03-20 10:28:01,476: ERROR/ForkPoolWorker-1] Error in save_result for task_id 29834e16-81a4-44bf-9b25-297d9b165456: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 65, in save_result
multiagent-worker  |     db.execute("SET TRANSACTION ISOLATION LEVEL READ COMMITTED")
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2149, in _execute_internal
multiagent-worker  |     statement = coercions.expect(roles.StatementRole, statement)
multiagent-worker  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 395, in expect
multiagent-worker  |     resolved = impl._literal_coercion(
multiagent-worker  |                ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 621, in _literal_coercion
multiagent-worker  |     return self._text_coercion(element, argname, **kw)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 614, in _text_coercion
multiagent-worker  |     return _no_text_coercion(element, argname)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 584, in _no_text_coercion
multiagent-worker  |     raise exc_cls(
multiagent-worker  | sqlalchemy.exc.ArgumentError: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | [2025-03-20 10:28:01,479: ERROR/ForkPoolWorker-1] Error saving failure result (attempt 1/3): Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 498, in execute_workflow_task
multiagent-worker  |     crud_result.save_result(
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 65, in save_result
multiagent-worker  |     db.execute("SET TRANSACTION ISOLATION LEVEL READ COMMITTED")
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2149, in _execute_internal
multiagent-worker  |     statement = coercions.expect(roles.StatementRole, statement)
multiagent-worker  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 395, in expect
multiagent-worker  |     resolved = impl._literal_coercion(
multiagent-worker  |                ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 621, in _literal_coercion
multiagent-worker  |     return self._text_coercion(element, argname, **kw)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 614, in _text_coercion
multiagent-worker  |     return _no_text_coercion(element, argname)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 584, in _no_text_coercion
multiagent-worker  |     raise exc_cls(
multiagent-worker  | sqlalchemy.exc.ArgumentError: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | [2025-03-20 10:28:01,488: WARNING/ForkPoolWorker-1] ERROR: Error saving failure result (attempt 1/3): Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | [2025-03-20 10:28:01,489: WARNING/ForkPoolWorker-2] Updating progress for task 29834e16-81a4-44bf-9b25-297d9b165456: status=failed, progress=0, step=None
multiagent-worker  | [2025-03-20 10:28:01,496: ERROR/ForkPoolWorker-2] Error updating task in queue: TaskQueue.update_task_status() takes from 3 to 6 positional arguments but 7 were given
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 583, in update_progress
multiagent-worker  |     asyncio.run(task_queue.update_task_status(task_id, status, progress, current_step, result, error))
multiagent-worker  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  | TypeError: TaskQueue.update_task_status() takes from 3 to 6 positional arguments but 7 were given
multiagent-worker  | [2025-03-20 10:28:01,503: WARNING/ForkPoolWorker-2] ERROR: Error updating task in queue: TaskQueue.update_task_status() takes from 3 to 6 positional arguments but 7 were given
multiagent-worker  | [2025-03-20 10:28:01,471: ERROR/ForkPoolWorker-3] Error updating task in database (attempt 1/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | psycopg2.errors.UndefinedColumn: column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | 
multiagent-worker  | The above exception was the direct cause of the following exception:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 604, in update_progress
multiagent-worker  |     existing_record = crud_result.get_by_task_id(db=db, task_id=task_id)
multiagent-worker  |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 32, in get_by_task_id
multiagent-worker  |     result = db.query(Result).filter(Result.task_id == task_id).first()
multiagent-worker  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2759, in first
multiagent-worker  |     return self.limit(1)._iter().first()  # type: ignore
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2858, in _iter
multiagent-worker  |     result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
multiagent-worker  |                                                   ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2251, in _execute_internal
multiagent-worker  |     result: Result[Any] = compile_state_cls.orm_execute_statement(
multiagent-worker  |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 306, in orm_execute_statement
multiagent-worker  |     result = conn.execute(
multiagent-worker  |              ^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1416, in execute
multiagent-worker  |     return meth(
multiagent-worker  |            ^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
multiagent-worker  |     return connection._execute_clauseelement(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
multiagent-worker  |     ret = self._execute_context(
multiagent-worker  |           ^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1843, in _execute_context
multiagent-worker  |     return self._exec_single_context(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
multiagent-worker  |     self._handle_dbapi_exception(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2352, in _handle_dbapi_exception
multiagent-worker  |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | 2025-03-20 10:28:01,508 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | [2025-03-20 10:28:01,509: WARNING/ForkPoolWorker-3] ERROR: Error updating task in database (attempt 1/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | 2025-03-20 10:28:01,511 INFO sqlalchemy.engine.Engine SELECT 1
multiagent-worker  | [2025-03-20 10:28:01,508: INFO/ForkPoolWorker-2] BEGIN (implicit)
multiagent-worker  | [2025-03-20 10:28:01,511: INFO/ForkPoolWorker-3] Retrying database update in 1 second...
multiagent-worker  | [2025-03-20 10:28:01,512: WARNING/ForkPoolWorker-3] Retrying database update in 1 second...
multiagent-worker  | 2025-03-20 10:28:01,514 INFO sqlalchemy.engine.Engine [cached since 127.5s ago] {}
multiagent-worker  | [2025-03-20 10:28:01,511: INFO/ForkPoolWorker-2] SELECT 1
multiagent-worker  | [2025-03-20 10:28:01,514: INFO/ForkPoolWorker-2] [cached since 127.5s ago] {}
multiagent-worker  | 2025-03-20 10:28:01,518 INFO sqlalchemy.engine.Engine SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | [2025-03-20 10:28:01,518: INFO/ForkPoolWorker-2] SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | 2025-03-20 10:28:01,521 INFO sqlalchemy.engine.Engine [cached since 127.4s ago] {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}
multiagent-worker  | [2025-03-20 10:28:01,521: INFO/ForkPoolWorker-2] [cached since 127.4s ago] {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}
multiagent-worker  | 2025-03-20 10:28:01,523 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | [2025-03-20 10:28:01,523: INFO/ForkPoolWorker-2] ROLLBACK
multiagent-worker  | [2025-03-20 10:28:01,525: ERROR/ForkPoolWorker-2] Error updating task in database (attempt 1/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | psycopg2.errors.UndefinedColumn: column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | 
multiagent-worker  | The above exception was the direct cause of the following exception:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 604, in update_progress
multiagent-worker  |     existing_record = crud_result.get_by_task_id(db=db, task_id=task_id)
multiagent-worker  |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 32, in get_by_task_id
multiagent-worker  |     result = db.query(Result).filter(Result.task_id == task_id).first()
multiagent-worker  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2759, in first
multiagent-worker  |     return self.limit(1)._iter().first()  # type: ignore
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2858, in _iter
multiagent-worker  |     result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
multiagent-worker  |                                                   ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2251, in _execute_internal
multiagent-worker  |     result: Result[Any] = compile_state_cls.orm_execute_statement(
multiagent-worker  |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 306, in orm_execute_statement
multiagent-worker  |     result = conn.execute(
multiagent-worker  |              ^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1416, in execute
multiagent-worker  |     return meth(
multiagent-worker  |            ^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
multiagent-worker  |     return connection._execute_clauseelement(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
multiagent-worker  |     ret = self._execute_context(
multiagent-worker  |           ^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1843, in _execute_context
multiagent-worker  |     return self._exec_single_context(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
multiagent-worker  |     self._handle_dbapi_exception(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2352, in _handle_dbapi_exception
multiagent-worker  |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:28:01,535: WARNING/ForkPoolWorker-2] ERROR: Error updating task in database (attempt 1/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:28:01,536: INFO/ForkPoolWorker-2] Retrying database update in 1 second...
multiagent-worker  | [2025-03-20 10:28:01,536: WARNING/ForkPoolWorker-2] Retrying database update in 1 second...
multiagent-worker  | [2025-03-20 10:28:02,489: ERROR/ForkPoolWorker-1] Error in save_result for task_id 29834e16-81a4-44bf-9b25-297d9b165456: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 65, in save_result
multiagent-worker  |     db.execute("SET TRANSACTION ISOLATION LEVEL READ COMMITTED")
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2149, in _execute_internal
multiagent-worker  |     statement = coercions.expect(roles.StatementRole, statement)
multiagent-worker  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 395, in expect
multiagent-worker  |     resolved = impl._literal_coercion(
multiagent-worker  |                ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 621, in _literal_coercion
multiagent-worker  |     return self._text_coercion(element, argname, **kw)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 614, in _text_coercion
multiagent-worker  |     return _no_text_coercion(element, argname)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 584, in _no_text_coercion
multiagent-worker  |     raise exc_cls(
multiagent-worker  | sqlalchemy.exc.ArgumentError: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | [2025-03-20 10:28:02,492: ERROR/ForkPoolWorker-1] Error saving failure result (attempt 2/3): Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 498, in execute_workflow_task
multiagent-worker  |     crud_result.save_result(
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 65, in save_result
multiagent-worker  |     db.execute("SET TRANSACTION ISOLATION LEVEL READ COMMITTED")
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2149, in _execute_internal
multiagent-worker  |     statement = coercions.expect(roles.StatementRole, statement)
multiagent-worker  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 395, in expect
multiagent-worker  |     resolved = impl._literal_coercion(
multiagent-worker  |                ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 621, in _literal_coercion
multiagent-worker  |     return self._text_coercion(element, argname, **kw)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 614, in _text_coercion
multiagent-worker  |     return _no_text_coercion(element, argname)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 584, in _no_text_coercion
multiagent-worker  |     raise exc_cls(
multiagent-worker  | sqlalchemy.exc.ArgumentError: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | [2025-03-20 10:28:02,496: WARNING/ForkPoolWorker-1] ERROR: Error saving failure result (attempt 2/3): Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | 2025-03-20 10:28:02,514 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | [2025-03-20 10:28:02,514: INFO/ForkPoolWorker-3] BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:28:02,515 INFO sqlalchemy.engine.Engine SELECT 1
multiagent-worker  | [2025-03-20 10:28:02,515: INFO/ForkPoolWorker-3] SELECT 1
multiagent-worker  | 2025-03-20 10:28:02,517 INFO sqlalchemy.engine.Engine [cached since 124.6s ago] {}
multiagent-worker  | [2025-03-20 10:28:02,517: INFO/ForkPoolWorker-3] [cached since 124.6s ago] {}
multiagent-worker  | [2025-03-20 10:28:02,520: INFO/ForkPoolWorker-3] SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | [2025-03-20 10:28:02,520: INFO/ForkPoolWorker-3] [cached since 124.6s ago] {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}
multiagent-worker  | [2025-03-20 10:28:02,522: INFO/ForkPoolWorker-3] ROLLBACK
multiagent-worker  | 2025-03-20 10:28:02,520 INFO sqlalchemy.engine.Engine SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | 2025-03-20 10:28:02,520 INFO sqlalchemy.engine.Engine [cached since 124.6s ago] {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}
multiagent-worker  | 2025-03-20 10:28:02,522 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | [2025-03-20 10:28:02,524: ERROR/ForkPoolWorker-3] Error updating task in database (attempt 2/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | psycopg2.errors.UndefinedColumn: column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | 
multiagent-worker  | The above exception was the direct cause of the following exception:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 604, in update_progress
multiagent-worker  |     existing_record = crud_result.get_by_task_id(db=db, task_id=task_id)
multiagent-worker  |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 32, in get_by_task_id
multiagent-worker  |     result = db.query(Result).filter(Result.task_id == task_id).first()
multiagent-worker  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2759, in first
multiagent-worker  |     return self.limit(1)._iter().first()  # type: ignore
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2858, in _iter
multiagent-worker  |     result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
multiagent-worker  |                                                   ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2251, in _execute_internal
multiagent-worker  |     result: Result[Any] = compile_state_cls.orm_execute_statement(
multiagent-worker  |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 306, in orm_execute_statement
multiagent-worker  |     result = conn.execute(
multiagent-worker  |              ^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1416, in execute
multiagent-worker  |     return meth(
multiagent-worker  |            ^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
multiagent-worker  |     return connection._execute_clauseelement(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
multiagent-worker  |     ret = self._execute_context(
multiagent-worker  |           ^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1843, in _execute_context
multiagent-worker  |     return self._exec_single_context(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
multiagent-worker  |     self._handle_dbapi_exception(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2352, in _handle_dbapi_exception
multiagent-worker  |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:28:02,534: WARNING/ForkPoolWorker-3] ERROR: Error updating task in database (attempt 2/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:28:02,534: INFO/ForkPoolWorker-3] Retrying database update in 1 second...
multiagent-worker  | [2025-03-20 10:28:02,534: WARNING/ForkPoolWorker-3] Retrying database update in 1 second...
multiagent-worker  | 2025-03-20 10:28:02,537 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:28:02,537 INFO sqlalchemy.engine.Engine SELECT 1
multiagent-worker  | 2025-03-20 10:28:02,537 INFO sqlalchemy.engine.Engine [cached since 128.5s ago] {}
multiagent-worker  | [2025-03-20 10:28:02,537: INFO/ForkPoolWorker-2] BEGIN (implicit)
multiagent-worker  | [2025-03-20 10:28:02,537: INFO/ForkPoolWorker-2] SELECT 1
multiagent-worker  | [2025-03-20 10:28:02,537: INFO/ForkPoolWorker-2] [cached since 128.5s ago] {}
multiagent-worker  | 2025-03-20 10:28:02,539 INFO sqlalchemy.engine.Engine SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | [2025-03-20 10:28:02,539: INFO/ForkPoolWorker-2] SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | 2025-03-20 10:28:02,540 INFO sqlalchemy.engine.Engine [cached since 128.4s ago] {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}
multiagent-worker  | [2025-03-20 10:28:02,540: INFO/ForkPoolWorker-2] [cached since 128.4s ago] {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}
multiagent-worker  | 2025-03-20 10:28:02,542 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | [2025-03-20 10:28:02,542: INFO/ForkPoolWorker-2] ROLLBACK
multiagent-worker  | [2025-03-20 10:28:02,543: ERROR/ForkPoolWorker-2] Error updating task in database (attempt 2/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | psycopg2.errors.UndefinedColumn: column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | 
multiagent-worker  | The above exception was the direct cause of the following exception:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 604, in update_progress
multiagent-worker  |     existing_record = crud_result.get_by_task_id(db=db, task_id=task_id)
multiagent-worker  |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 32, in get_by_task_id
multiagent-worker  |     result = db.query(Result).filter(Result.task_id == task_id).first()
multiagent-worker  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2759, in first
multiagent-worker  |     return self.limit(1)._iter().first()  # type: ignore
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2858, in _iter
multiagent-worker  |     result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
multiagent-worker  |                                                   ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2251, in _execute_internal
multiagent-worker  |     result: Result[Any] = compile_state_cls.orm_execute_statement(
multiagent-worker  |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 306, in orm_execute_statement
multiagent-worker  |     result = conn.execute(
multiagent-worker  |              ^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1416, in execute
multiagent-worker  |     return meth(
multiagent-worker  |            ^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
multiagent-worker  |     return connection._execute_clauseelement(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
multiagent-worker  |     ret = self._execute_context(
multiagent-worker  |           ^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1843, in _execute_context
multiagent-worker  |     return self._exec_single_context(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
multiagent-worker  |     self._handle_dbapi_exception(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2352, in _handle_dbapi_exception
multiagent-worker  |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:28:02,546: WARNING/ForkPoolWorker-2] ERROR: Error updating task in database (attempt 2/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:28:02,546: INFO/ForkPoolWorker-2] Retrying database update in 1 second...
multiagent-worker  | [2025-03-20 10:28:02,546: WARNING/ForkPoolWorker-2] Retrying database update in 1 second...
multiagent-worker  | [2025-03-20 10:28:03,496: ERROR/ForkPoolWorker-1] Error in save_result for task_id 29834e16-81a4-44bf-9b25-297d9b165456: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 65, in save_result
multiagent-worker  |     db.execute("SET TRANSACTION ISOLATION LEVEL READ COMMITTED")
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2149, in _execute_internal
multiagent-worker  |     statement = coercions.expect(roles.StatementRole, statement)
multiagent-worker  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 395, in expect
multiagent-worker  |     resolved = impl._literal_coercion(
multiagent-worker  |                ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 621, in _literal_coercion
multiagent-worker  |     return self._text_coercion(element, argname, **kw)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 614, in _text_coercion
multiagent-worker  |     return _no_text_coercion(element, argname)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 584, in _no_text_coercion
multiagent-worker  |     raise exc_cls(
multiagent-worker  | sqlalchemy.exc.ArgumentError: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | [2025-03-20 10:28:03,497: ERROR/ForkPoolWorker-1] Error saving failure result (attempt 3/3): Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 498, in execute_workflow_task
multiagent-worker  |     crud_result.save_result(
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 65, in save_result
multiagent-worker  |     db.execute("SET TRANSACTION ISOLATION LEVEL READ COMMITTED")
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2149, in _execute_internal
multiagent-worker  |     statement = coercions.expect(roles.StatementRole, statement)
multiagent-worker  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 395, in expect
multiagent-worker  |     resolved = impl._literal_coercion(
multiagent-worker  |                ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 621, in _literal_coercion
multiagent-worker  |     return self._text_coercion(element, argname, **kw)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 614, in _text_coercion
multiagent-worker  |     return _no_text_coercion(element, argname)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/coercions.py", line 584, in _no_text_coercion
multiagent-worker  |     raise exc_cls(
multiagent-worker  | sqlalchemy.exc.ArgumentError: Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | [2025-03-20 10:28:03,500: WARNING/ForkPoolWorker-1] ERROR: Error saving failure result (attempt 3/3): Textual SQL expression 'SET TRANSACTION ISOLATION...' should be explicitly declared as text('SET TRANSACTION ISOLATION...')
multiagent-worker  | [2025-03-20 10:28:03,507: ERROR/ForkPoolWorker-1] Workflow research failed with error: Error setting up workflow environment: No module named 'multiagent.app.agents'
multiagent-worker  | [2025-03-20 10:28:03,508: WARNING/ForkPoolWorker-1] Workflow research failed with error: Error setting up workflow environment: No module named 'multiagent.app.agents'
multiagent-worker  | [2025-03-20 10:28:03,512: INFO/MainProcess] Task app.worker.tasks.update_progress[81c0f844-deeb-4d25-9f3e-7abde027a090] received
multiagent-worker  | [2025-03-20 10:28:03,528: INFO/ForkPoolWorker-4] Starting task: app.worker.tasks.update_progress (ID: 81c0f844-deeb-4d25-9f3e-7abde027a090)
multiagent-worker  | [2025-03-20 10:28:03,536: INFO/ForkPoolWorker-3] BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:28:03,536 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:28:03,538 INFO sqlalchemy.engine.Engine SELECT 1
multiagent-worker  | 2025-03-20 10:28:03,540 INFO sqlalchemy.engine.Engine [cached since 125.6s ago] {}
multiagent-worker  | [2025-03-20 10:28:03,538: INFO/ForkPoolWorker-3] SELECT 1
multiagent-worker  | [2025-03-20 10:28:03,540: INFO/ForkPoolWorker-3] [cached since 125.6s ago] {}
multiagent-worker  | 2025-03-20 10:28:03,543 INFO sqlalchemy.engine.Engine SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | [2025-03-20 10:28:03,543: INFO/ForkPoolWorker-3] SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | 2025-03-20 10:28:03,546 INFO sqlalchemy.engine.Engine [cached since 125.6s ago] {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}
multiagent-worker  | [2025-03-20 10:28:03,546: INFO/ForkPoolWorker-3] [cached since 125.6s ago] {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}
multiagent-worker  | [2025-03-20 10:28:03,539: ERROR/ForkPoolWorker-1] Task app.worker.tasks.execute_workflow_task[4cf0e9e7-af70-431d-87c7-86da1d996551] raised unexpected: Exception("Workflow execution failed: Error setting up workflow environment: No module named 'multiagent.app.agents'")
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 234, in execute_workflow_task
multiagent-worker  |     from multiagent.app.orchestrator.manager import AgentManager
multiagent-worker  |   File "/app/multiagent/app/orchestrator/manager.py", line 12, in <module>
multiagent-worker  |     from multiagent.app.agents.base import BaseAgent
multiagent-worker  | ModuleNotFoundError: No module named 'multiagent.app.agents'
multiagent-worker  | 
multiagent-worker  | During handling of the above exception, another exception occurred:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 316, in execute_workflow_task
multiagent-worker  |     raise Exception(error_msg)
multiagent-worker  | Exception: Error setting up workflow environment: No module named 'multiagent.app.agents'
multiagent-worker  | 
multiagent-worker  | During handling of the above exception, another exception occurred:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/celery/app/trace.py", line 453, in trace_task
multiagent-worker  |     R = retval = fun(*args, **kwargs)
multiagent-worker  |                  ^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/celery/app/trace.py", line 736, in __protected_call__
multiagent-worker  |     return self.run(*args, **kwargs)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 542, in execute_workflow_task
multiagent-worker  |     raise Exception(f"Workflow execution failed: {error_msg}")
multiagent-worker  | Exception: Workflow execution failed: Error setting up workflow environment: No module named 'multiagent.app.agents'
multiagent-worker  | 2025-03-20 10:28:03,557 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | [2025-03-20 10:28:03,559: INFO/ForkPoolWorker-1] Task completed: app.worker.tasks.execute_workflow_task (ID: 4cf0e9e7-af70-431d-87c7-86da1d996551, State: FAILURE)
multiagent-worker  | [2025-03-20 10:28:03,557: INFO/ForkPoolWorker-3] ROLLBACK
multiagent-worker  | [2025-03-20 10:28:03,576: WARNING/ForkPoolWorker-4] Updating progress for task 29834e16-81a4-44bf-9b25-297d9b165456: status=failed, progress=0, step=None
multiagent-worker  | [2025-03-20 10:28:03,577: ERROR/ForkPoolWorker-4] Error updating task in queue: TaskQueue.update_task_status() takes from 3 to 6 positional arguments but 7 were given
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 583, in update_progress
multiagent-worker  |     asyncio.run(task_queue.update_task_status(task_id, status, progress, current_step, result, error))
multiagent-worker  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  | TypeError: TaskQueue.update_task_status() takes from 3 to 6 positional arguments but 7 were given
multiagent-worker  | [2025-03-20 10:28:03,591: WARNING/ForkPoolWorker-4] ERROR: Error updating task in queue: TaskQueue.update_task_status() takes from 3 to 6 positional arguments but 7 were given
multiagent-worker  | [2025-03-20 10:28:03,552: ERROR/ForkPoolWorker-2] Error updating task in database (attempt 3/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | 
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 146, in __init__
multiagent-worker  |     self._dbapi_connection = engine.raw_connection()
multiagent-worker  |                              ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3298, in raw_connection
multiagent-worker  |     return self.pool.connect()
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 449, in connect
multiagent-worker  |     return _ConnectionFairy._checkout(self)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 1363, in _checkout
multiagent-worker  |     with util.safe_reraise():
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
multiagent-worker  |     raise exc_value.with_traceback(exc_tb)
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 1301, in _checkout
multiagent-worker  |     result = pool._dialect._do_ping_w_event(
multiagent-worker  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 717, in _do_ping_w_event
multiagent-worker  |     return self.do_ping(dbapi_connection)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/dialects/postgresql/_psycopg_common.py", line 181, in do_ping
multiagent-worker  |     cursor.execute(self._dialect_specific_select_one)
multiagent-worker  | psycopg2.errors.UndefinedColumn: column results.retry_count does not exist
multiagent-worker  | 
multiagent-worker  | 
multiagent-worker  | The above exception was the direct cause of the following exception:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 599, in update_progress
multiagent-worker  |     connection_check = db.execute(text("SELECT 1")).scalar()
multiagent-worker  |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2241, in _execute_internal
multiagent-worker  |     conn = self._connection_for_bind(bind)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2110, in _connection_for_bind
multiagent-worker  |     return trans._connection_for_bind(engine, execution_options)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "<string>", line 2, in _connection_for_bind
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
multiagent-worker  |     ret_value = fn(self, *arg, **kw)
multiagent-worker  |                 ^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1189, in _connection_for_bind
multiagent-worker  |     conn = bind.connect()
multiagent-worker  |            ^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3274, in connect
multiagent-worker  |     return self._connection_cls(self)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 148, in __init__
multiagent-worker  |     Connection._handle_dbapi_exception_noconnection(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2439, in _handle_dbapi_exception_noconnection
multiagent-worker  |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 146, in __init__
multiagent-worker  |     self._dbapi_connection = engine.raw_connection()
multiagent-worker  |                              ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3298, in raw_connection
multiagent-worker  |     return self.pool.connect()
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 449, in connect
multiagent-worker  |     return _ConnectionFairy._checkout(self)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 1363, in _checkout
multiagent-worker  |     with util.safe_reraise():
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
multiagent-worker  |     raise exc_value.with_traceback(exc_tb)
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 1301, in _checkout
multiagent-worker  |     result = pool._dialect._do_ping_w_event(
multiagent-worker  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 717, in _do_ping_w_event
multiagent-worker  |     return self.do_ping(dbapi_connection)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/dialects/postgresql/_psycopg_common.py", line 181, in do_ping
multiagent-worker  |     cursor.execute(self._dialect_specific_select_one)
multiagent-worker  | sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | 
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:28:03,608: WARNING/ForkPoolWorker-2] ERROR: Error updating task in database (attempt 3/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | 
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:28:03,612: INFO/ForkPoolWorker-2] Task app.worker.tasks.update_progress[924f3d64-40b5-4cb7-ace3-70ad15861f30] succeeded in 2.136401616000512s: {'task_id': '29834e16-81a4-44bf-9b25-297d9b165456', 'status': 'failed', 'progress': 0, 'queue_update_error': 'TaskQueue.update_task_status() takes from 3 to 6 positional arguments but 7 were given', 'db_update_success': False}
multiagent-worker  | [2025-03-20 10:28:03,563: ERROR/ForkPoolWorker-3] Error updating task in database (attempt 3/3): (psycopg2.OperationalError) server closed the connection unexpectedly
multiagent-worker  | 	This probably means the server terminated abnormally
multiagent-worker  | 	before or while processing the request.
multiagent-worker  | 
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/e3q8)
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/cursor.py", line 858, in _indexes_for_keys
multiagent-worker  |     return [self._keymap[key][0] for key in keys]
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/cursor.py", line 858, in <listcomp>
multiagent-worker  |     return [self._keymap[key][0] for key in keys]
multiagent-worker  |             ~~~~~~~~~~~~^^^^^
multiagent-worker  | KeyError: Column('id', Integer(), table=<results>, primary_key=True, nullable=False)
multiagent-worker  | 
multiagent-worker  | The above exception was the direct cause of the following exception:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 604, in update_progress
multiagent-worker  |     existing_record = crud_result.get_by_task_id(db=db, task_id=task_id)
multiagent-worker  |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 32, in get_by_task_id
multiagent-worker  |     result = db.query(Result).filter(Result.task_id == task_id).first()
multiagent-worker  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2759, in first
multiagent-worker  |     return self.limit(1)._iter().first()  # type: ignore
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2858, in _iter
multiagent-worker  |     result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
multiagent-worker  |                                                   ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2251, in _execute_internal
multiagent-worker  |     result: Result[Any] = compile_state_cls.orm_execute_statement(
multiagent-worker  |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 309, in orm_execute_statement
multiagent-worker  |     return cls.orm_setup_cursor_result(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 616, in orm_setup_cursor_result
multiagent-worker  |     return loading.instances(result, querycontext)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/loading.py", line 132, in instances
multiagent-worker  |     with util.safe_reraise():
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 146, in __exit__
multiagent-worker  |     raise exc_value.with_traceback(exc_tb)
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/loading.py", line 113, in instances
multiagent-worker  |     *[
multiagent-worker  |      ^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/loading.py", line 114, in <listcomp>
multiagent-worker  |     query_entity.row_processor(context, cursor)
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 2788, in row_processor
multiagent-worker  |     _instance = loading._instance_processor(
multiagent-worker  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/loading.py", line 877, in _instance_processor
multiagent-worker  |     primary_key_getter = result._tuple_getter(pk_cols)
multiagent-worker  |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/result.py", line 1182, in _tuple_getter
multiagent-worker  |     return self._metadata._row_as_tuple_getter(keys)
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/result.py", line 179, in _row_as_tuple_getter
multiagent-worker  |     indexes = self._indexes_for_keys(keys)
multiagent-worker  |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/cursor.py", line 861, in _indexes_for_keys
multiagent-worker  |     CursorResultMetaData._key_fallback(self, ke.args[0], ke)
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/cursor.py", line 824, in _key_fallback
multiagent-worker  |     raise exc.NoSuchColumnError(
multiagent-worker  | sqlalchemy.exc.NoSuchColumnError: Could not locate column in row for column 'results.id'
multiagent-worker  | 
multiagent-worker  | During handling of the above exception, another exception occurred:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1125, in _rollback_impl
multiagent-worker  |     self.engine.dialect.do_rollback(self.connection)
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 700, in do_rollback
multiagent-worker  |     dbapi_connection.rollback()
multiagent-worker  | psycopg2.OperationalError: server closed the connection unexpectedly
multiagent-worker  | 	This probably means the server terminated abnormally
multiagent-worker  | 	before or while processing the request.
multiagent-worker  | 
multiagent-worker  | 
multiagent-worker  | The above exception was the direct cause of the following exception:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 597, in update_progress
multiagent-worker  |     with SessionLocal() as db:
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1811, in __exit__
multiagent-worker  |     self.close()
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2521, in close
multiagent-worker  |     self._close_impl(invalidate=False)
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2590, in _close_impl
multiagent-worker  |     transaction.close(invalidate)
multiagent-worker  |   File "<string>", line 2, in close
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/state_changes.py", line 139, in _go
multiagent-worker  |     ret_value = fn(self, *arg, **kw)
multiagent-worker  |                 ^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1419, in close
multiagent-worker  |     transaction.close()
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2586, in close
multiagent-worker  |     self._do_close()
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2724, in _do_close
multiagent-worker  |     self._close_impl()
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2710, in _close_impl
multiagent-worker  |     self._connection_rollback_impl()
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2702, in _connection_rollback_impl
multiagent-worker  |     self.connection._rollback_impl()
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1127, in _rollback_impl
multiagent-worker  |     self._handle_dbapi_exception(e, None, None, None, None)
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2352, in _handle_dbapi_exception
multiagent-worker  |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1125, in _rollback_impl
multiagent-worker  |     self.engine.dialect.do_rollback(self.connection)
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 700, in do_rollback
multiagent-worker  |     dbapi_connection.rollback()
multiagent-worker  | sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) server closed the connection unexpectedly
multiagent-worker  | 	This probably means the server terminated abnormally
multiagent-worker  | 	before or while processing the request.
multiagent-worker  | 
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/e3q8)
multiagent-worker  | [2025-03-20 10:28:03,616: WARNING/ForkPoolWorker-3] ERROR: Error updating task in database (attempt 3/3): (psycopg2.OperationalError) server closed the connection unexpectedly
multiagent-worker  | 	This probably means the server terminated abnormally
multiagent-worker  | 	before or while processing the request.
multiagent-worker  | 
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/e3q8)
multiagent-worker  | [2025-03-20 10:28:03,616: INFO/ForkPoolWorker-2] Task completed: app.worker.tasks.update_progress (ID: 924f3d64-40b5-4cb7-ace3-70ad15861f30, State: SUCCESS)
multiagent-worker  | 2025-03-20 10:28:03,620 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | [2025-03-20 10:28:03,623: INFO/ForkPoolWorker-3] Task app.worker.tasks.update_progress[3bd36f2a-9aa8-4d1f-ab47-4d77db1921f1] succeeded in 2.2058828150002228s: {'task_id': '29834e16-81a4-44bf-9b25-297d9b165456', 'status': 'processing', 'progress': 10, 'queue_update_error': 'TaskQueue.update_task_status() takes from 3 to 6 positional arguments but 7 were given', 'db_update_success': False}
multiagent-worker  | [2025-03-20 10:28:03,620: INFO/ForkPoolWorker-4] BEGIN (implicit)
multiagent-worker  | [2025-03-20 10:28:03,625: INFO/ForkPoolWorker-3] Task completed: app.worker.tasks.update_progress (ID: 3bd36f2a-9aa8-4d1f-ab47-4d77db1921f1, State: SUCCESS)
multiagent-worker  | 2025-03-20 10:28:03,626 INFO sqlalchemy.engine.Engine SELECT 1
multiagent-worker  | [2025-03-20 10:28:03,626: INFO/ForkPoolWorker-4] SELECT 1
multiagent-worker  | 2025-03-20 10:28:03,629 INFO sqlalchemy.engine.Engine [generated in 0.00292s] {}
multiagent-worker  | [2025-03-20 10:28:03,629: INFO/ForkPoolWorker-4] [generated in 0.00292s] {}
multiagent-worker  | 2025-03-20 10:28:03,697 INFO sqlalchemy.engine.Engine SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | [2025-03-20 10:28:03,697: INFO/ForkPoolWorker-4] SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | 2025-03-20 10:28:03,699 INFO sqlalchemy.engine.Engine [generated in 0.00143s] {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}
multiagent-worker  | [2025-03-20 10:28:03,699: INFO/ForkPoolWorker-4] [generated in 0.00143s] {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}
multiagent-worker  | 2025-03-20 10:28:03,704 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | [2025-03-20 10:28:03,704: INFO/ForkPoolWorker-4] ROLLBACK
multiagent-worker  | [2025-03-20 10:28:03,706: ERROR/ForkPoolWorker-4] Error updating task in database (attempt 1/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | psycopg2.errors.UndefinedColumn: column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | 
multiagent-worker  | The above exception was the direct cause of the following exception:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 604, in update_progress
multiagent-worker  |     existing_record = crud_result.get_by_task_id(db=db, task_id=task_id)
multiagent-worker  |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 32, in get_by_task_id
multiagent-worker  |     result = db.query(Result).filter(Result.task_id == task_id).first()
multiagent-worker  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2759, in first
multiagent-worker  |     return self.limit(1)._iter().first()  # type: ignore
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2858, in _iter
multiagent-worker  |     result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
multiagent-worker  |                                                   ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2251, in _execute_internal
multiagent-worker  |     result: Result[Any] = compile_state_cls.orm_execute_statement(
multiagent-worker  |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 306, in orm_execute_statement
multiagent-worker  |     result = conn.execute(
multiagent-worker  |              ^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1416, in execute
multiagent-worker  |     return meth(
multiagent-worker  |            ^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
multiagent-worker  |     return connection._execute_clauseelement(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
multiagent-worker  |     ret = self._execute_context(
multiagent-worker  |           ^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1843, in _execute_context
multiagent-worker  |     return self._exec_single_context(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
multiagent-worker  |     self._handle_dbapi_exception(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2352, in _handle_dbapi_exception
multiagent-worker  |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:28:03,726: WARNING/ForkPoolWorker-4] ERROR: Error updating task in database (attempt 1/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:28:03,726: INFO/ForkPoolWorker-4] Retrying database update in 1 second...
multiagent-worker  | [2025-03-20 10:28:03,726: WARNING/ForkPoolWorker-4] Retrying database update in 1 second...
multiagent-worker  | 2025-03-20 10:28:04,728 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:28:04,729 INFO sqlalchemy.engine.Engine SELECT 1
multiagent-worker  | [2025-03-20 10:28:04,728: INFO/ForkPoolWorker-4] BEGIN (implicit)
multiagent-worker  | [2025-03-20 10:28:04,729: INFO/ForkPoolWorker-4] SELECT 1
multiagent-worker  | 2025-03-20 10:28:04,729 INFO sqlalchemy.engine.Engine [cached since 1.103s ago] {}
multiagent-worker  | [2025-03-20 10:28:04,729: INFO/ForkPoolWorker-4] [cached since 1.103s ago] {}
multiagent-worker  | 2025-03-20 10:28:04,731 INFO sqlalchemy.engine.Engine SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | [2025-03-20 10:28:04,731: INFO/ForkPoolWorker-4] SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | 2025-03-20 10:28:04,732 INFO sqlalchemy.engine.Engine [cached since 1.035s ago] {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}
multiagent-worker  | [2025-03-20 10:28:04,732: INFO/ForkPoolWorker-4] [cached since 1.035s ago] {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}
multiagent-worker  | 2025-03-20 10:28:04,733 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | [2025-03-20 10:28:04,733: INFO/ForkPoolWorker-4] ROLLBACK
multiagent-worker  | [2025-03-20 10:28:04,735: ERROR/ForkPoolWorker-4] Error updating task in database (attempt 2/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | psycopg2.errors.UndefinedColumn: column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | 
multiagent-worker  | The above exception was the direct cause of the following exception:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 604, in update_progress
multiagent-worker  |     existing_record = crud_result.get_by_task_id(db=db, task_id=task_id)
multiagent-worker  |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 32, in get_by_task_id
multiagent-worker  |     result = db.query(Result).filter(Result.task_id == task_id).first()
multiagent-worker  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2759, in first
multiagent-worker  |     return self.limit(1)._iter().first()  # type: ignore
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2858, in _iter
multiagent-worker  |     result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
multiagent-worker  |                                                   ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2251, in _execute_internal
multiagent-worker  |     result: Result[Any] = compile_state_cls.orm_execute_statement(
multiagent-worker  |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 306, in orm_execute_statement
multiagent-worker  |     result = conn.execute(
multiagent-worker  |              ^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1416, in execute
multiagent-worker  |     return meth(
multiagent-worker  |            ^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
multiagent-worker  |     return connection._execute_clauseelement(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
multiagent-worker  |     ret = self._execute_context(
multiagent-worker  |           ^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1843, in _execute_context
multiagent-worker  |     return self._exec_single_context(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
multiagent-worker  |     self._handle_dbapi_exception(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2352, in _handle_dbapi_exception
multiagent-worker  |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:28:04,739: WARNING/ForkPoolWorker-4] ERROR: Error updating task in database (attempt 2/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:28:04,739: INFO/ForkPoolWorker-4] Retrying database update in 1 second...
multiagent-worker  | [2025-03-20 10:28:04,739: WARNING/ForkPoolWorker-4] Retrying database update in 1 second...
multiagent-worker  | 2025-03-20 10:28:05,740 INFO sqlalchemy.engine.Engine BEGIN (implicit)
multiagent-worker  | 2025-03-20 10:28:05,741 INFO sqlalchemy.engine.Engine SELECT 1
multiagent-worker  | 2025-03-20 10:28:05,741 INFO sqlalchemy.engine.Engine [cached since 2.115s ago] {}
multiagent-worker  | [2025-03-20 10:28:05,740: INFO/ForkPoolWorker-4] BEGIN (implicit)
multiagent-worker  | [2025-03-20 10:28:05,741: INFO/ForkPoolWorker-4] SELECT 1
multiagent-worker  | [2025-03-20 10:28:05,741: INFO/ForkPoolWorker-4] [cached since 2.115s ago] {}
multiagent-worker  | 2025-03-20 10:28:05,744 INFO sqlalchemy.engine.Engine SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | [2025-03-20 10:28:05,744: INFO/ForkPoolWorker-4] SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s
multiagent-worker  | 2025-03-20 10:28:05,746 INFO sqlalchemy.engine.Engine [cached since 2.049s ago] {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}
multiagent-worker  | [2025-03-20 10:28:05,746: INFO/ForkPoolWorker-4] [cached since 2.049s ago] {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}
multiagent-worker  | 2025-03-20 10:28:05,748 INFO sqlalchemy.engine.Engine ROLLBACK
multiagent-worker  | [2025-03-20 10:28:05,748: INFO/ForkPoolWorker-4] ROLLBACK
multiagent-worker  | [2025-03-20 10:28:05,749: ERROR/ForkPoolWorker-4] Error updating task in database (attempt 3/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | psycopg2.errors.UndefinedColumn: column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | 
multiagent-worker  | The above exception was the direct cause of the following exception:
multiagent-worker  | 
multiagent-worker  | Traceback (most recent call last):
multiagent-worker  |   File "/app/multiagent/app/worker/tasks.py", line 604, in update_progress
multiagent-worker  |     existing_record = crud_result.get_by_task_id(db=db, task_id=task_id)
multiagent-worker  |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/app/multiagent/app/db/results.py", line 32, in get_by_task_id
multiagent-worker  |     result = db.query(Result).filter(Result.task_id == task_id).first()
multiagent-worker  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2759, in first
multiagent-worker  |     return self.limit(1)._iter().first()  # type: ignore
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2858, in _iter
multiagent-worker  |     result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
multiagent-worker  |                                                   ^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
multiagent-worker  |     return self._execute_internal(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2251, in _execute_internal
multiagent-worker  |     result: Result[Any] = compile_state_cls.orm_execute_statement(
multiagent-worker  |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 306, in orm_execute_statement
multiagent-worker  |     result = conn.execute(
multiagent-worker  |              ^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1416, in execute
multiagent-worker  |     return meth(
multiagent-worker  |            ^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
multiagent-worker  |     return connection._execute_clauseelement(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
multiagent-worker  |     ret = self._execute_context(
multiagent-worker  |           ^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1843, in _execute_context
multiagent-worker  |     return self._exec_single_context(
multiagent-worker  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
multiagent-worker  |     self._handle_dbapi_exception(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2352, in _handle_dbapi_exception
multiagent-worker  |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
multiagent-worker  |     self.dialect.do_execute(
multiagent-worker  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 942, in do_execute
multiagent-worker  |     cursor.execute(statement, parameters)
multiagent-worker  | sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:28:05,755: WARNING/ForkPoolWorker-4] ERROR: Error updating task in database (attempt 3/3): (psycopg2.errors.UndefinedColumn) column results.retry_count does not exist
multiagent-worker  | LINE 1: ...results_result, results.status AS results_status, results.re...
multiagent-worker  |                                                              ^
multiagent-worker  | 
multiagent-worker  | [SQL: SELECT results.id AS results_id, results.task_id AS results_task_id, results.celery_task_id AS results_celery_task_id, results.query AS results_query, results.user_id AS results_user_id, results.workflow AS results_workflow, results.result AS results_result, results.status AS results_status, results.retry_count AS results_retry_count, results.last_error AS results_last_error, results.created_at AS results_created_at, results.updated_at AS results_updated_at 
multiagent-worker  | FROM results 
multiagent-worker  | WHERE results.task_id = %(task_id_1)s 
multiagent-worker  |  LIMIT %(param_1)s]
multiagent-worker  | [parameters: {'task_id_1': '29834e16-81a4-44bf-9b25-297d9b165456', 'param_1': 1}]
multiagent-worker  | (Background on this error at: https://sqlalche.me/e/20/f405)
multiagent-worker  | [2025-03-20 10:28:05,760: INFO/ForkPoolWorker-4] Task app.worker.tasks.update_progress[81c0f844-deeb-4d25-9f3e-7abde027a090] succeeded in 2.2319690309996076s: {'task_id': '29834e16-81a4-44bf-9b25-297d9b165456', 'status': 'failed', 'progress': 0, 'queue_update_error': 'TaskQueue.update_task_status() takes from 3 to 6 positional arguments but 7 were given', 'db_update_success': False}
multiagent-worker  | [2025-03-20 10:28:05,761: INFO/ForkPoolWorker-4] Task completed: app.worker.tasks.update_progress (ID: 81c0f844-deeb-4d25-9f3e-7abde027a090, State: SUCCESS)
